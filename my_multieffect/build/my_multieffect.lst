ARM GAS  /tmp/cckGrLHt.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"my_multieffect.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN7daisysp8ReverbScD2Ev,"axG",%progbits,_ZN7daisysp8ReverbScD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN7daisysp8ReverbScD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN7daisysp8ReverbScD2Ev:
  27              	.LVL0:
  28              	.LFB3038:
  29              		.file 1 "../../DaisySP//Source/Effects/reverbsc.h"
   1:../../DaisySP//Source/Effects/reverbsc.h **** #pragma once
   2:../../DaisySP//Source/Effects/reverbsc.h **** #ifndef DSYSP_REVERBSC_H
   3:../../DaisySP//Source/Effects/reverbsc.h **** #define DSYSP_REVERBSC_H
   4:../../DaisySP//Source/Effects/reverbsc.h **** 
   5:../../DaisySP//Source/Effects/reverbsc.h **** #define DSY_REVERBSC_MAX_SIZE 98936
   6:../../DaisySP//Source/Effects/reverbsc.h **** 
   7:../../DaisySP//Source/Effects/reverbsc.h **** namespace daisysp
   8:../../DaisySP//Source/Effects/reverbsc.h **** {
   9:../../DaisySP//Source/Effects/reverbsc.h **** /**Delay line for internal reverb use
  10:../../DaisySP//Source/Effects/reverbsc.h **** */
  11:../../DaisySP//Source/Effects/reverbsc.h **** typedef struct
  12:../../DaisySP//Source/Effects/reverbsc.h **** {
  13:../../DaisySP//Source/Effects/reverbsc.h ****     int    write_pos;         /**< write position */
  14:../../DaisySP//Source/Effects/reverbsc.h ****     int    buffer_size;       /**< buffer size */
  15:../../DaisySP//Source/Effects/reverbsc.h ****     int    read_pos;          /**< read position */
  16:../../DaisySP//Source/Effects/reverbsc.h ****     int    read_pos_frac;     /**< fractional component of read pos */
  17:../../DaisySP//Source/Effects/reverbsc.h ****     int    read_pos_frac_inc; /**< increment for fractional */
  18:../../DaisySP//Source/Effects/reverbsc.h ****     int    dummy;             /**<  dummy var */
  19:../../DaisySP//Source/Effects/reverbsc.h ****     int    seed_val;          /**< randseed */
  20:../../DaisySP//Source/Effects/reverbsc.h ****     int    rand_line_cnt;     /**< number of random lines */
  21:../../DaisySP//Source/Effects/reverbsc.h ****     float  filter_state;      /**< state of filter */
  22:../../DaisySP//Source/Effects/reverbsc.h ****     float *buf;               /**< buffer ptr */
  23:../../DaisySP//Source/Effects/reverbsc.h **** } ReverbScDl;
  24:../../DaisySP//Source/Effects/reverbsc.h **** 
  25:../../DaisySP//Source/Effects/reverbsc.h **** /** Stereo Reverb
  26:../../DaisySP//Source/Effects/reverbsc.h **** 
  27:../../DaisySP//Source/Effects/reverbsc.h **** Reverb SC:               Ported from csound/soundpipe
  28:../../DaisySP//Source/Effects/reverbsc.h **** 
  29:../../DaisySP//Source/Effects/reverbsc.h **** Original author(s):        Sean Costello, Istvan Varga
ARM GAS  /tmp/cckGrLHt.s 			page 2


  30:../../DaisySP//Source/Effects/reverbsc.h **** 
  31:../../DaisySP//Source/Effects/reverbsc.h **** Year:                    1999, 2005
  32:../../DaisySP//Source/Effects/reverbsc.h **** 
  33:../../DaisySP//Source/Effects/reverbsc.h **** Ported to soundpipe by:  Paul Batchelor
  34:../../DaisySP//Source/Effects/reverbsc.h **** 
  35:../../DaisySP//Source/Effects/reverbsc.h **** Ported by:                Stephen Hensley
  36:../../DaisySP//Source/Effects/reverbsc.h **** */
  37:../../DaisySP//Source/Effects/reverbsc.h **** class ReverbSc
  38:../../DaisySP//Source/Effects/reverbsc.h **** {
  39:../../DaisySP//Source/Effects/reverbsc.h ****   public:
  40:../../DaisySP//Source/Effects/reverbsc.h ****     ReverbSc() {}
  41:../../DaisySP//Source/Effects/reverbsc.h ****     ~ReverbSc() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 18 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE3038:
  40              		.weak	_ZN7daisysp8ReverbScD1Ev
  41              		.thumb_set _ZN7daisysp8ReverbScD1Ev,_ZN7daisysp8ReverbScD2Ev
  42 0002 00BF     		.section	.text._ZN7daisysp4ToneD2Ev,"axG",%progbits,_ZN7daisysp4ToneD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN7daisysp4ToneD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	_ZN7daisysp4ToneD2Ev:
  51              	.LVL1:
  52              	.LFB3151:
  53              		.file 2 "../../DaisySP//Source/Filters/tone.h"
   1:../../DaisySP//Source/Filters/tone.h **** #pragma once
   2:../../DaisySP//Source/Filters/tone.h **** #ifndef DSY_TONE_H
   3:../../DaisySP//Source/Filters/tone.h **** #define DSY_TONE_H
   4:../../DaisySP//Source/Filters/tone.h **** 
   5:../../DaisySP//Source/Filters/tone.h **** #include <stdint.h>
   6:../../DaisySP//Source/Filters/tone.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Filters/tone.h **** 
   8:../../DaisySP//Source/Filters/tone.h **** namespace daisysp
   9:../../DaisySP//Source/Filters/tone.h **** {
  10:../../DaisySP//Source/Filters/tone.h **** /** A first-order recursive low-pass filter with variable frequency response.
  11:../../DaisySP//Source/Filters/tone.h **** */
  12:../../DaisySP//Source/Filters/tone.h **** class Tone
  13:../../DaisySP//Source/Filters/tone.h **** {
  14:../../DaisySP//Source/Filters/tone.h ****   public:
  15:../../DaisySP//Source/Filters/tone.h ****     Tone() {}
  16:../../DaisySP//Source/Filters/tone.h ****     ~Tone() {}
  54              		.loc 2 16 5 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              		.loc 2 16 14 is_stmt 0 view .LVU3
  60 0000 7047     		bx	lr
ARM GAS  /tmp/cckGrLHt.s 			page 3


  61              		.cfi_endproc
  62              	.LFE3151:
  64              		.weak	_ZN7daisysp4ToneD1Ev
  65              		.thumb_set _ZN7daisysp4ToneD1Ev,_ZN7daisysp4ToneD2Ev
  66 0002 00BF     		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
  67              		.align	1
  68              		.p2align 2,,3
  69              		.weak	_ZN5daisy9ParameterD2Ev
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	_ZN5daisy9ParameterD2Ev:
  75              	.LVL2:
  76              	.LFB3922:
  77              		.file 3 "../../libDaisy//src/hid/parameter.h"
   1:../../libDaisy//src/hid/parameter.h **** #pragma once
   2:../../libDaisy//src/hid/parameter.h **** #include <stdint.h>
   3:../../libDaisy//src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libDaisy//src/hid/parameter.h **** 
   5:../../libDaisy//src/hid/parameter.h **** namespace daisy
   6:../../libDaisy//src/hid/parameter.h **** {
   7:../../libDaisy//src/hid/parameter.h **** /** @addtogroup controls
   8:../../libDaisy//src/hid/parameter.h ****     @{
   9:../../libDaisy//src/hid/parameter.h **** */
  10:../../libDaisy//src/hid/parameter.h **** 
  11:../../libDaisy//src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libDaisy//src/hid/parameter.h **** class Parameter
  13:../../libDaisy//src/hid/parameter.h **** {
  14:../../libDaisy//src/hid/parameter.h ****   public:
  15:../../libDaisy//src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libDaisy//src/hid/parameter.h ****     enum Curve
  17:../../libDaisy//src/hid/parameter.h ****     {
  18:../../libDaisy//src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libDaisy//src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libDaisy//src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
  21:../../libDaisy//src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libDaisy//src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libDaisy//src/hid/parameter.h ****     };
  24:../../libDaisy//src/hid/parameter.h ****     /** Constructor */
  25:../../libDaisy//src/hid/parameter.h ****     Parameter() {}
  26:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
  27:../../libDaisy//src/hid/parameter.h ****     ~Parameter() {}
  78              		.loc 3 27 5 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LBB366:
  84              	.LBI366:
  85              		.file 4 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
ARM GAS  /tmp/cckGrLHt.s 			page 4


   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  86              		.loc 4 23 5 view .LVU5
  87              		.loc 4 23 5 is_stmt 0 view .LVU6
  88              	.LBE366:
  89              		.loc 3 27 19 view .LVU7
  90 0000 7047     		bx	lr
  91              		.cfi_endproc
  92              	.LFE3922:
  94              		.weak	_ZN5daisy9ParameterD1Ev
  95              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
  96 0002 00BF     		.section	.text._ZN5daisy8DaisyPodD2Ev,"axG",%progbits,_ZN5daisy8DaisyPodD5Ev,comdat
  97              		.align	1
  98              		.p2align 2,,3
  99              		.weak	_ZN5daisy8DaisyPodD2Ev
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 104              	_ZN5daisy8DaisyPodD2Ev:
 105              	.LVL3:
 106              	.LFB4820:
 107              		.file 5 "../../libDaisy//src/daisy_pod.h"
   1:../../libDaisy//src/daisy_pod.h **** #pragma once
   2:../../libDaisy//src/daisy_pod.h **** #ifndef DSY_POD_BSP_H
   3:../../libDaisy//src/daisy_pod.h **** #define DSY_POD_BSP_H
   4:../../libDaisy//src/daisy_pod.h **** 
   5:../../libDaisy//src/daisy_pod.h **** #include "daisy_seed.h"
   6:../../libDaisy//src/daisy_pod.h **** 
   7:../../libDaisy//src/daisy_pod.h **** namespace daisy
   8:../../libDaisy//src/daisy_pod.h **** {
   9:../../libDaisy//src/daisy_pod.h **** /**
  10:../../libDaisy//src/daisy_pod.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libDaisy//src/daisy_pod.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libDaisy//src/daisy_pod.h ****     @author Stephen Hensley
  13:../../libDaisy//src/daisy_pod.h ****     @date November 2019
  14:../../libDaisy//src/daisy_pod.h ****     @ingroup boards
  15:../../libDaisy//src/daisy_pod.h **** */
  16:../../libDaisy//src/daisy_pod.h **** class DaisyPod
  17:../../libDaisy//src/daisy_pod.h **** {
  18:../../libDaisy//src/daisy_pod.h ****   public:
  19:../../libDaisy//src/daisy_pod.h ****     /** Switches */
  20:../../libDaisy//src/daisy_pod.h ****     enum Sw
  21:../../libDaisy//src/daisy_pod.h ****     {
ARM GAS  /tmp/cckGrLHt.s 			page 5


  22:../../libDaisy//src/daisy_pod.h ****         BUTTON_1,    /** & */
  23:../../libDaisy//src/daisy_pod.h ****         BUTTON_2,    /** & */
  24:../../libDaisy//src/daisy_pod.h ****         BUTTON_LAST, /** &  */
  25:../../libDaisy//src/daisy_pod.h ****     };
  26:../../libDaisy//src/daisy_pod.h **** 
  27:../../libDaisy//src/daisy_pod.h ****     /** Knobs */
  28:../../libDaisy//src/daisy_pod.h ****     enum Knob
  29:../../libDaisy//src/daisy_pod.h ****     {
  30:../../libDaisy//src/daisy_pod.h ****         KNOB_1,    /** &  */
  31:../../libDaisy//src/daisy_pod.h ****         KNOB_2,    /** & */
  32:../../libDaisy//src/daisy_pod.h ****         KNOB_LAST, /** & */
  33:../../libDaisy//src/daisy_pod.h ****     };
  34:../../libDaisy//src/daisy_pod.h **** 
  35:../../libDaisy//src/daisy_pod.h ****     DaisyPod() {}
  36:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 108              		.loc 5 36 5 is_stmt 1 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113              	.LBB367:
 114              	.LBI367:
 115              		.file 6 "../../libDaisy//src/hid/midi.h"
   1:../../libDaisy//src/hid/midi.h **** #pragma once
   2:../../libDaisy//src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libDaisy//src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libDaisy//src/hid/midi.h **** 
   5:../../libDaisy//src/hid/midi.h **** // TODO: make this adjustable
   6:../../libDaisy//src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libDaisy//src/hid/midi.h **** 
   8:../../libDaisy//src/hid/midi.h **** #include <stdint.h>
   9:../../libDaisy//src/hid/midi.h **** #include <stdlib.h>
  10:../../libDaisy//src/hid/midi.h **** #include "per/uart.h"
  11:../../libDaisy//src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libDaisy//src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libDaisy//src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libDaisy//src/hid/midi.h **** #include "sys/system.h"
  15:../../libDaisy//src/hid/midi.h **** 
  16:../../libDaisy//src/hid/midi.h **** namespace daisy
  17:../../libDaisy//src/hid/midi.h **** {
  18:../../libDaisy//src/hid/midi.h **** /** @brief   Transport layer for sending and receiving MIDI data over UART 
  19:../../libDaisy//src/hid/midi.h ****  *  @details This is the mode of communication used for TRS and DIN MIDI
  20:../../libDaisy//src/hid/midi.h ****  *  @ingroup midi
  21:../../libDaisy//src/hid/midi.h **** */
  22:../../libDaisy//src/hid/midi.h **** class MidiUartTransport
  23:../../libDaisy//src/hid/midi.h **** {
  24:../../libDaisy//src/hid/midi.h ****   public:
  25:../../libDaisy//src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libDaisy//src/hid/midi.h **** 
  28:../../libDaisy//src/hid/midi.h ****     struct Config
  29:../../libDaisy//src/hid/midi.h ****     {
  30:../../libDaisy//src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libDaisy//src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libDaisy//src/hid/midi.h **** 
  34:../../libDaisy//src/hid/midi.h ****         Config()
ARM GAS  /tmp/cckGrLHt.s 			page 6


  35:../../libDaisy//src/hid/midi.h ****         {
  36:../../libDaisy//src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libDaisy//src/hid/midi.h ****         }
  40:../../libDaisy//src/hid/midi.h ****     };
  41:../../libDaisy//src/hid/midi.h **** 
  42:../../libDaisy//src/hid/midi.h ****     inline void Init(Config config)
  43:../../libDaisy//src/hid/midi.h ****     {
  44:../../libDaisy//src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libDaisy//src/hid/midi.h **** 
  46:../../libDaisy//src/hid/midi.h ****         //defaults
  47:../../libDaisy//src/hid/midi.h ****         uart_config.baudrate   = 31250;
  48:../../libDaisy//src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libDaisy//src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libDaisy//src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libDaisy//src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libDaisy//src/hid/midi.h **** 
  53:../../libDaisy//src/hid/midi.h ****         //user settings
  54:../../libDaisy//src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libDaisy//src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libDaisy//src/hid/midi.h **** 
  58:../../libDaisy//src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libDaisy//src/hid/midi.h ****     }
  60:../../libDaisy//src/hid/midi.h **** 
  61:../../libDaisy//src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libDaisy//src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libDaisy//src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libDaisy//src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libDaisy//src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libDaisy//src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libDaisy//src/hid/midi.h **** 
  68:../../libDaisy//src/hid/midi.h ****   private:
  69:../../libDaisy//src/hid/midi.h ****     UartHandler uart_;
  70:../../libDaisy//src/hid/midi.h **** };
  71:../../libDaisy//src/hid/midi.h **** 
  72:../../libDaisy//src/hid/midi.h **** /** 
  73:../../libDaisy//src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libDaisy//src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libDaisy//src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libDaisy//src/hid/midi.h ****     @author shensley
  77:../../libDaisy//src/hid/midi.h ****     @date March 2020
  78:../../libDaisy//src/hid/midi.h ****     @ingroup midi
  79:../../libDaisy//src/hid/midi.h **** */
  80:../../libDaisy//src/hid/midi.h **** template <typename Transport>
  81:../../libDaisy//src/hid/midi.h **** class MidiHandler
  82:../../libDaisy//src/hid/midi.h **** {
  83:../../libDaisy//src/hid/midi.h ****   public:
  84:../../libDaisy//src/hid/midi.h ****     MidiHandler() {}
  85:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 116              		.loc 6 85 5 view .LVU9
 117              	.LBB368:
 118              	.LBI368:
  26:../../libDaisy//src/hid/midi.h **** 
 119              		.loc 6 26 5 view .LVU10
  26:../../libDaisy//src/hid/midi.h **** 
ARM GAS  /tmp/cckGrLHt.s 			page 7


 120              		.loc 6 26 5 is_stmt 0 view .LVU11
 121              	.LBE368:
 122              	.LBE367:
 123              	.LBB369:
 124              	.LBI369:
 125              		.file 7 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 126              		.loc 7 18 5 is_stmt 1 view .LVU12
 127              	.LBB370:
 128              	.LBI370:
 129              		.file 8 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
 130              		.loc 8 25 5 view .LVU13
 131              		.loc 8 25 5 is_stmt 0 view .LVU14
 132              	.LBE370:
 133              	.LBB371:
ARM GAS  /tmp/cckGrLHt.s 			page 8


 134              	.LBI371:
 135              		.loc 8 25 5 is_stmt 1 view .LVU15
 136              		.loc 8 25 5 is_stmt 0 view .LVU16
 137              	.LBE371:
 138              	.LBB372:
 139              	.LBI372:
 140              		.loc 8 25 5 is_stmt 1 view .LVU17
 141              		.loc 8 25 5 is_stmt 0 view .LVU18
 142              	.LBE372:
 143              	.LBE369:
 144              	.LBB373:
 145              	.LBI373:
 146              		.loc 7 18 5 is_stmt 1 view .LVU19
 147              	.LBB374:
 148              	.LBI374:
 149              		.loc 8 25 5 view .LVU20
 150              		.loc 8 25 5 is_stmt 0 view .LVU21
 151              	.LBE374:
 152              	.LBB375:
 153              	.LBI375:
 154              		.loc 8 25 5 is_stmt 1 view .LVU22
 155              		.loc 8 25 5 is_stmt 0 view .LVU23
 156              	.LBE375:
 157              	.LBB376:
 158              	.LBI376:
 159              		.loc 8 25 5 is_stmt 1 view .LVU24
 160              		.loc 8 25 5 is_stmt 0 view .LVU25
 161              	.LBE376:
 162              	.LBE373:
 163              	.LBB377:
 164              	.LBI377:
 165              		.file 9 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
ARM GAS  /tmp/cckGrLHt.s 			page 9


  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 166              		.loc 9 42 5 is_stmt 1 view .LVU26
 167              		.loc 9 42 5 is_stmt 0 view .LVU27
 168              	.LBE377:
 169              	.LBB378:
 170              	.LBI378:
 171              		.loc 9 42 5 is_stmt 1 view .LVU28
 172              		.loc 9 42 5 is_stmt 0 view .LVU29
 173              	.LBE378:
 174              	.LBB379:
 175              	.LBI379:
 176              		.loc 4 23 5 is_stmt 1 view .LVU30
 177              		.loc 4 23 5 is_stmt 0 view .LVU31
 178              	.LBE379:
 179              	.LBB380:
 180              	.LBI380:
 181              		.loc 4 23 5 is_stmt 1 view .LVU32
 182              		.loc 4 23 5 is_stmt 0 view .LVU33
 183              	.LBE380:
 184              	.LBB381:
 185              	.LBI381:
 186              		.file 10 "../../libDaisy//src/hid/encoder.h"
   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
ARM GAS  /tmp/cckGrLHt.s 			page 10


  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 187              		.loc 10 21 5 is_stmt 1 view .LVU34
 188              	.LBB382:
 189              	.LBI382:
 190              		.loc 9 42 5 view .LVU35
 191              		.loc 9 42 5 is_stmt 0 view .LVU36
 192              	.LBE382:
 193              	.LBE381:
 194              	.LBB383:
 195              	.LBI383:
 196              		.file 11 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 197              		.loc 11 22 5 is_stmt 1 view .LVU37
 198              	.LBB384:
 199              	.LBI384:
 200              		.file 12 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
ARM GAS  /tmp/cckGrLHt.s 			page 11


  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
ARM GAS  /tmp/cckGrLHt.s 			page 12


  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
 201              		.loc 12 78 5 view .LVU38
 202              		.loc 12 78 5 is_stmt 0 view .LVU39
 203              	.LBE384:
 204              	.LBB385:
 205              	.LBI385:
 206              		.file 13 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 207              		.loc 13 42 5 is_stmt 1 view .LVU40
 208              		.loc 13 42 5 is_stmt 0 view .LVU41
 209              	.LBE385:
 210              	.LBB386:
 211              	.LBI386:
 212              		.file 14 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
ARM GAS  /tmp/cckGrLHt.s 			page 13


   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
ARM GAS  /tmp/cckGrLHt.s 			page 14


  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 213              		.loc 14 93 5 is_stmt 1 view .LVU42
 214              		.loc 14 93 5 is_stmt 0 view .LVU43
 215              	.LBE386:
 216              	.LBB387:
 217              	.LBI387:
 218              		.file 15 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
ARM GAS  /tmp/cckGrLHt.s 			page 15


  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
ARM GAS  /tmp/cckGrLHt.s 			page 16


  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 219              		.loc 15 96 5 is_stmt 1 view .LVU44
 220              		.loc 15 96 5 is_stmt 0 view .LVU45
 221              	.LBE387:
 222              	.LBE383:
 223              		.loc 5 36 18 view .LVU46
 224 0000 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE4820:
 228              		.weak	_ZN5daisy8DaisyPodD1Ev
 229              		.thumb_set _ZN5daisy8DaisyPodD1Ev,_ZN5daisy8DaisyPodD2Ev
 230 0002 00BF     		.section	.text._ZN7daisysp9DelayLineIfLj120000EED2Ev,"axG",%progbits,_ZN7daisysp9DelayLineIfLj1200
 231              		.align	1
 232              		.p2align 2,,3
 233              		.weak	_ZN7daisysp9DelayLineIfLj120000EED2Ev
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 238              	_ZN7daisysp9DelayLineIfLj120000EED2Ev:
 239              	.LVL4:
 240              	.LFB5412:
 241              		.file 16 "../../DaisySP//Source/Utility/delayline.h"
   1:../../DaisySP//Source/Utility/delayline.h **** #pragma once
   2:../../DaisySP//Source/Utility/delayline.h **** #ifndef DSY_DELAY_H
   3:../../DaisySP//Source/Utility/delayline.h **** #define DSY_DELAY_H
   4:../../DaisySP//Source/Utility/delayline.h **** #include <stdlib.h>
   5:../../DaisySP//Source/Utility/delayline.h **** #include <stdint.h>
   6:../../DaisySP//Source/Utility/delayline.h **** namespace daisysp
   7:../../DaisySP//Source/Utility/delayline.h **** {
   8:../../DaisySP//Source/Utility/delayline.h **** /** Simple Delay line.
   9:../../DaisySP//Source/Utility/delayline.h **** November 2019
  10:../../DaisySP//Source/Utility/delayline.h **** 
  11:../../DaisySP//Source/Utility/delayline.h **** Converted to Template December 2019
  12:../../DaisySP//Source/Utility/delayline.h **** 
  13:../../DaisySP//Source/Utility/delayline.h **** declaration example: (1 second of floats)
ARM GAS  /tmp/cckGrLHt.s 			page 17


  14:../../DaisySP//Source/Utility/delayline.h **** 
  15:../../DaisySP//Source/Utility/delayline.h **** DelayLine<float, SAMPLE_RATE> del;
  16:../../DaisySP//Source/Utility/delayline.h **** 
  17:../../DaisySP//Source/Utility/delayline.h **** By: shensley
  18:../../DaisySP//Source/Utility/delayline.h **** */
  19:../../DaisySP//Source/Utility/delayline.h **** template <typename T, size_t max_size>
  20:../../DaisySP//Source/Utility/delayline.h **** class DelayLine
  21:../../DaisySP//Source/Utility/delayline.h **** {
  22:../../DaisySP//Source/Utility/delayline.h ****   public:
  23:../../DaisySP//Source/Utility/delayline.h ****     DelayLine() {}
  24:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 242              		.loc 16 24 5 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247              		.loc 16 24 19 is_stmt 0 view .LVU48
 248 0000 7047     		bx	lr
 249              		.cfi_endproc
 250              	.LFE5412:
 252              		.weak	_ZN7daisysp9DelayLineIfLj120000EED1Ev
 253              		.thumb_set _ZN7daisysp9DelayLineIfLj120000EED1Ev,_ZN7daisysp9DelayLineIfLj120000EED2Ev
 254 0002 00BF     		.section	.text.startup.main,"ax",%progbits
 255              		.align	1
 256              		.p2align 2,,3
 257              		.global	main
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	main:
 263              	.LFB4824:
 264              		.file 17 "my_multieffect.cpp"
   1:my_multieffect.cpp **** /*
   2:my_multieffect.cpp **** 
   3:my_multieffect.cpp ****     MULTIEFFECT CHAIN
   4:my_multieffect.cpp ****     -----------------
   5:my_multieffect.cpp **** 
   6:my_multieffect.cpp ****     Chain multiple effects
   7:my_multieffect.cpp ****     #TODO: Add low pass filter to delay (SetLpFreq())
   8:my_multieffect.cpp ****     #TODO: Replace BitCrusher with Overdrive
   9:my_multieffect.cpp ****     #TODO: Chain effects: Multiple effects ON at the same time.
  10:my_multieffect.cpp ****            # NOTE: How to control effect order in effect chain
  11:my_multieffect.cpp ****            # Example: IN - > Distortion -> Delay -> Reverb -> OUT
  12:my_multieffect.cpp ****     #TODO: Add button to control Effect ON / OFF
  13:my_multieffect.cpp ****     #TODO: Add more effects:
  14:my_multieffect.cpp ****     #      Reverse Reverb (reverbsc.h)
  15:my_multieffect.cpp ****     #      Chorus/phaser etc (tremolo.h, phaser.h)
  16:my_multieffect.cpp ****     #      Fuzz/Distortion (overdrive.h)
  17:my_multieffect.cpp ****     #      Pitch Shift (pitchshifter.h) NOTE! Check SetFun() for fun!
  18:my_multieffect.cpp ****     #      Harmonics (...harmonic_osc.h ?)
  19:my_multieffect.cpp ****     #      etc..
  20:my_multieffect.cpp **** 
  21:my_multieffect.cpp **** */
  22:my_multieffect.cpp **** 
  23:my_multieffect.cpp **** 
  24:my_multieffect.cpp **** #include "daisysp.h"
  25:my_multieffect.cpp **** #include "daisy_pod.h"
ARM GAS  /tmp/cckGrLHt.s 			page 18


  26:my_multieffect.cpp **** 
  27:my_multieffect.cpp **** // Set max delay time to 0.75 of samplerate.
  28:my_multieffect.cpp **** #define MAX_DELAY static_cast<size_t>(48000 * 2.5f)
  29:my_multieffect.cpp **** #define REV 0
  30:my_multieffect.cpp **** #define DEL 1
  31:my_multieffect.cpp **** #define CRU 2
  32:my_multieffect.cpp **** 
  33:my_multieffect.cpp **** 
  34:my_multieffect.cpp **** using namespace daisysp;
  35:my_multieffect.cpp **** using namespace daisy;
  36:my_multieffect.cpp **** 
  37:my_multieffect.cpp **** static DaisyPod pod;
  38:my_multieffect.cpp **** 
  39:my_multieffect.cpp **** static ReverbSc                                  rev;
  40:my_multieffect.cpp **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS dell;
  41:my_multieffect.cpp **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delr;
  42:my_multieffect.cpp **** static Tone                                      tone;
  43:my_multieffect.cpp **** static Parameter deltime, cutoffParam, crushrate;
  44:my_multieffect.cpp **** 
  45:my_multieffect.cpp **** 
  46:my_multieffect.cpp **** int mode = REV;
  47:my_multieffect.cpp **** float currentDelay, feedback, delayTarget, cutoff;
  48:my_multieffect.cpp **** int crushmod, crushcount;
  49:my_multieffect.cpp **** float crushsl, crushsr, drywet;
  50:my_multieffect.cpp **** 
  51:my_multieffect.cpp **** 
  52:my_multieffect.cpp **** //Helper functions
  53:my_multieffect.cpp **** void Controls();
  54:my_multieffect.cpp **** void GetReverbSample(float &outl, float &outr, float inl, float inr);
  55:my_multieffect.cpp **** void GetDelaySample(float &outl, float &outr, float inl, float inr);
  56:my_multieffect.cpp **** void GetCrushSample(float &outl, float &outr, float inl, float inr);
  57:my_multieffect.cpp **** 
  58:my_multieffect.cpp **** 
  59:my_multieffect.cpp **** void AudioCallback(AudioHandle::InterleavingInputBuffer  in,
  60:my_multieffect.cpp ****                    AudioHandle::InterleavingOutputBuffer out,
  61:my_multieffect.cpp ****                    size_t                                size) {
  62:my_multieffect.cpp **** 
  63:my_multieffect.cpp ****     float outl, outr, inl, inr;
  64:my_multieffect.cpp **** 
  65:my_multieffect.cpp ****     Controls();
  66:my_multieffect.cpp **** 
  67:my_multieffect.cpp ****     //audio
  68:my_multieffect.cpp ****     for(size_t i = 0; i < size; i += 2) {
  69:my_multieffect.cpp ****         inl = in[i];
  70:my_multieffect.cpp ****         inr = in[i + 1];
  71:my_multieffect.cpp **** 
  72:my_multieffect.cpp ****         switch(mode) {
  73:my_multieffect.cpp ****             case REV:
  74:my_multieffect.cpp ****                 GetReverbSample(outl, outr, inl, inr);
  75:my_multieffect.cpp ****             break;
  76:my_multieffect.cpp **** 
  77:my_multieffect.cpp ****             case DEL: 
  78:my_multieffect.cpp ****                 GetDelaySample(outl, outr, inl, inr);
  79:my_multieffect.cpp ****             break;
  80:my_multieffect.cpp **** 
  81:my_multieffect.cpp ****             case CRU:
  82:my_multieffect.cpp ****                 GetCrushSample(outl, outr, inl, inr);
ARM GAS  /tmp/cckGrLHt.s 			page 19


  83:my_multieffect.cpp ****             break;
  84:my_multieffect.cpp **** 
  85:my_multieffect.cpp ****             default: outl = outr = 0;
  86:my_multieffect.cpp ****         }
  87:my_multieffect.cpp **** 
  88:my_multieffect.cpp ****         // left out
  89:my_multieffect.cpp ****         out[i] = outl;
  90:my_multieffect.cpp **** 
  91:my_multieffect.cpp ****         // right out
  92:my_multieffect.cpp ****         out[i + 1] = outr;
  93:my_multieffect.cpp ****     }
  94:my_multieffect.cpp **** }
  95:my_multieffect.cpp **** 
  96:my_multieffect.cpp **** int main(void) {
 265              		.loc 17 96 16 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 32
 268              		@ frame_needed = 0, uses_anonymous_args = 0
  97:my_multieffect.cpp **** 
  98:my_multieffect.cpp ****     // initialize pod hardware and oscillator daisysp module
  99:my_multieffect.cpp ****     pod.Init();
 269              		.loc 17 99 5 view .LVU50
  96:my_multieffect.cpp **** 
 270              		.loc 17 96 16 is_stmt 0 view .LVU51
 271 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 272              		.cfi_def_cfa_offset 32
 273              		.cfi_offset 4, -32
 274              		.cfi_offset 5, -28
 275              		.cfi_offset 6, -24
 276              		.cfi_offset 7, -20
 277              		.cfi_offset 8, -16
 278              		.cfi_offset 9, -12
 279              		.cfi_offset 10, -8
 280              		.cfi_offset 14, -4
 281              		.loc 17 99 13 view .LVU52
 282 0004 0021     		movs	r1, #0
 283 0006 4E48     		ldr	r0, .L10+8
 100:my_multieffect.cpp ****     float sample_rate;
 101:my_multieffect.cpp **** 
 102:my_multieffect.cpp ****     
 103:my_multieffect.cpp ****     //Inits and sample rate
 104:my_multieffect.cpp ****     pod.SetAudioBlockSize(4);
 105:my_multieffect.cpp ****     sample_rate = pod.AudioSampleRate();
 106:my_multieffect.cpp ****     rev.Init(sample_rate);
 284              		.loc 17 106 13 view .LVU53
 285 0008 4E4F     		ldr	r7, .L10+12
 286              	.LBB388:
 287              	.LBB389:
 288              	.LBB390:
  25:../../DaisySP//Source/Utility/delayline.h ****     /** initializes the delay line by clearing the values within, and setting delay to 1 sample.
  26:../../DaisySP//Source/Utility/delayline.h ****     */
  27:../../DaisySP//Source/Utility/delayline.h ****     void Init() { Reset(); }
  28:../../DaisySP//Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  29:../../DaisySP//Source/Utility/delayline.h ****     */
  30:../../DaisySP//Source/Utility/delayline.h ****     void Reset()
  31:../../DaisySP//Source/Utility/delayline.h ****     {
  32:../../DaisySP//Source/Utility/delayline.h ****         for(size_t i = 0; i < max_size; i++)
ARM GAS  /tmp/cckGrLHt.s 			page 20


  33:../../DaisySP//Source/Utility/delayline.h ****         {
  34:../../DaisySP//Source/Utility/delayline.h ****             line_[i] = T(0);
  35:../../DaisySP//Source/Utility/delayline.h ****         }
  36:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_ = 0;
 289              		.loc 16 36 20 view .LVU54
 290 000a 0024     		movs	r4, #0
 291              	.LBB391:
  34:../../DaisySP//Source/Utility/delayline.h ****         }
 292              		.loc 16 34 22 view .LVU55
 293 000c 4E4E     		ldr	r6, .L10+16
 294              	.LBE391:
  37:../../DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
 295              		.loc 16 37 20 view .LVU56
 296 000e 0125     		movs	r5, #1
 297              	.LBE390:
 298              	.LBE389:
 299              	.LBE388:
 300              	.LBB397:
 301              	.LBB398:
 302              	.LBB399:
 303              	.LBB400:
  34:../../DaisySP//Source/Utility/delayline.h ****         }
 304              		.loc 16 34 22 view .LVU57
 305 0010 DFF87891 		ldr	r9, .L10+84
 306              	.LBE400:
 307              	.LBE399:
 308              	.LBE398:
 309              	.LBE397:
  96:my_multieffect.cpp **** 
 310              		.loc 17 96 16 view .LVU58
 311 0014 2DED028B 		vpush.64	{d8}
 312              		.cfi_def_cfa_offset 40
 313              		.cfi_offset 80, -40
 314              		.cfi_offset 81, -36
 315 0018 88B0     		sub	sp, sp, #32
 316              		.cfi_def_cfa_offset 72
  99:my_multieffect.cpp ****     float sample_rate;
 317              		.loc 17 99 13 view .LVU59
 318 001a FFF7FEFF 		bl	_ZN5daisy8DaisyPod4InitEb
 319              	.LVL5:
 100:my_multieffect.cpp **** 
 320              		.loc 17 100 5 is_stmt 1 view .LVU60
 104:my_multieffect.cpp ****     sample_rate = pod.AudioSampleRate();
 321              		.loc 17 104 5 view .LVU61
 104:my_multieffect.cpp ****     sample_rate = pod.AudioSampleRate();
 322              		.loc 17 104 26 is_stmt 0 view .LVU62
 323 001e 0421     		movs	r1, #4
 324 0020 4748     		ldr	r0, .L10+8
 325 0022 FFF7FEFF 		bl	_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
 326              	.LVL6:
 105:my_multieffect.cpp ****     rev.Init(sample_rate);
 327              		.loc 17 105 5 is_stmt 1 view .LVU63
 105:my_multieffect.cpp ****     rev.Init(sample_rate);
 328              		.loc 17 105 38 is_stmt 0 view .LVU64
 329 0026 4648     		ldr	r0, .L10+8
 330 0028 FFF7FEFF 		bl	_ZN5daisy8DaisyPod15AudioSampleRateEv
 331              	.LVL7:
ARM GAS  /tmp/cckGrLHt.s 			page 21


 332              		.loc 17 106 13 view .LVU65
 333 002c 3846     		mov	r0, r7
 105:my_multieffect.cpp ****     rev.Init(sample_rate);
 334              		.loc 17 105 38 view .LVU66
 335 002e B0EE408A 		vmov.f32	s16, s0
 336              	.LVL8:
 337              		.loc 17 106 5 is_stmt 1 view .LVU67
 338              		.loc 17 106 13 is_stmt 0 view .LVU68
 339 0032 FFF7FEFF 		bl	_ZN7daisysp8ReverbSc4InitEf
 340              	.LVL9:
 107:my_multieffect.cpp ****     dell.Init();
 341              		.loc 17 107 5 is_stmt 1 view .LVU69
 342              	.LBB409:
 343              	.LBI388:
  27:../../DaisySP//Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
 344              		.loc 16 27 10 view .LVU70
 345              	.LBB395:
 346              	.LBI389:
  30:../../DaisySP//Source/Utility/delayline.h ****     {
 347              		.loc 16 30 10 view .LVU71
 348              	.LBB393:
 349              	.LBB392:
  32:../../DaisySP//Source/Utility/delayline.h ****         {
 350              		.loc 16 32 29 view .LVU72
  34:../../DaisySP//Source/Utility/delayline.h ****         }
 351              		.loc 16 34 22 is_stmt 0 view .LVU73
 352 0036 454A     		ldr	r2, .L10+20
 353 0038 0021     		movs	r1, #0
 354 003a 3046     		mov	r0, r6
 355 003c FFF7FEFF 		bl	memset
 356              	.LVL10:
  34:../../DaisySP//Source/Utility/delayline.h ****         }
 357              		.loc 16 34 22 view .LVU74
 358              	.LBE392:
 359              	.LBE393:
 360              	.LBE395:
 361              	.LBE409:
 362              	.LBB410:
 363              	.LBB406:
 364              	.LBB403:
 365              	.LBB401:
 366 0040 2146     		mov	r1, r4
 367 0042 424A     		ldr	r2, .L10+20
 368 0044 4846     		mov	r0, r9
 369              	.LBE401:
 370              	.LBE403:
 371              	.LBE406:
 372              	.LBE410:
 373              	.LBB411:
 374              	.LBB396:
 375              	.LBB394:
  36:../../DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
 376              		.loc 16 36 20 view .LVU75
 377 0046 46F8084C 		str	r4, [r6, #-8]
 378              		.loc 16 37 20 view .LVU76
 379 004a 46F8045C 		str	r5, [r6, #-4]
 380              	.LVL11:
ARM GAS  /tmp/cckGrLHt.s 			page 22


 381              		.loc 16 37 20 view .LVU77
 382              	.LBE394:
 383              	.LBE396:
 384              	.LBE411:
 385              	.LBB412:
 386              	.LBB407:
 387              	.LBB404:
 388              	.LBB402:
  32:../../DaisySP//Source/Utility/delayline.h ****         {
 389              		.loc 16 32 29 is_stmt 1 view .LVU78
  34:../../DaisySP//Source/Utility/delayline.h ****         }
 390              		.loc 16 34 22 is_stmt 0 view .LVU79
 391 004e FFF7FEFF 		bl	memset
 392              	.LVL12:
  34:../../DaisySP//Source/Utility/delayline.h ****         }
 393              		.loc 16 34 22 view .LVU80
 394              	.LBE402:
 395              	.LBE404:
 396              	.LBE407:
 397              	.LBE412:
 108:my_multieffect.cpp ****     delr.Init();
 109:my_multieffect.cpp ****     tone.Init(sample_rate);
 398              		.loc 17 109 14 view .LVU81
 399 0052 B0EE480A 		vmov.f32	s0, s16
 400 0056 3E48     		ldr	r0, .L10+24
 401              	.LBB413:
 402              	.LBB408:
 403              	.LBB405:
 404              		.loc 16 37 20 view .LVU82
 405 0058 49E90245 		strd	r4, r5, [r9, #-8]
 406              	.LBE405:
 407              	.LBE408:
 408              	.LBE413:
 409              		.loc 17 109 5 is_stmt 1 view .LVU83
 410              		.loc 17 109 14 is_stmt 0 view .LVU84
 411 005c FFF7FEFF 		bl	_ZN7daisysp4Tone4InitEf
 412              	.LVL13:
 110:my_multieffect.cpp **** 
 111:my_multieffect.cpp ****     //set parameters
 112:my_multieffect.cpp ****     deltime.Init(pod.knob1, sample_rate * .05, MAX_DELAY, deltime.LOGARITHMIC);
 413              		.loc 17 112 5 is_stmt 1 view .LVU85
 414              		.loc 17 112 29 is_stmt 0 view .LVU86
 415 0060 B7EEC87A 		vcvt.f64.f32	d7, s16
 416              		.loc 17 112 22 view .LVU87
 417 0064 3B4C     		ldr	r4, .L10+28
 418 0066 6D46     		mov	r5, sp
 419              		.loc 17 112 17 view .LVU88
 420 0068 DFED3B0A 		vldr.32	s1, .L10+32
 421              		.loc 17 112 41 view .LVU89
 422 006c 9FED326B 		vldr.64	d6, .L10
 423              		.loc 17 112 22 view .LVU90
 424 0070 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 425              		.loc 17 112 41 view .LVU91
 426 0072 27EE067B 		vmul.f64	d7, d7, d6
 427              		.loc 17 112 22 view .LVU92
 428 0076 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 429 0078 94E80F00 		ldm	r4, {r0, r1, r2, r3}
ARM GAS  /tmp/cckGrLHt.s 			page 23


 430              		.loc 17 112 17 view .LVU93
 431 007c B7EEC70B 		vcvt.f32.f64	s0, d7
 432              		.loc 17 112 22 view .LVU94
 433 0080 85E80F00 		stm	r5, {r0, r1, r2, r3}
 434              		.loc 17 112 17 view .LVU95
 435 0084 0222     		movs	r2, #2
 436 0086 6946     		mov	r1, sp
 437 0088 3448     		ldr	r0, .L10+36
 438 008a FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 439              	.LVL14:
 440              	.LBB414:
 441              	.LBI414:
 442              		.loc 4 23 5 is_stmt 1 view .LVU96
 443              		.loc 4 23 5 is_stmt 0 view .LVU97
 444              	.LBE414:
 113:my_multieffect.cpp ****     cutoffParam.Init(pod.knob1, 500, 20000, cutoffParam.LOGARITHMIC);
 445              		.loc 17 113 5 is_stmt 1 view .LVU98
 446              		.loc 17 113 26 is_stmt 0 view .LVU99
 447 008e A4F1100E 		sub	lr, r4, #16
 448 0092 EC46     		mov	ip, sp
 449              		.loc 17 113 21 view .LVU100
 450 0094 DFED320A 		vldr.32	s1, .L10+40
 451 0098 9FED320A 		vldr.32	s0, .L10+44
 452              		.loc 17 113 26 view .LVU101
 453 009c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 454 00a0 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 455 00a4 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 456 00a8 85E80F00 		stm	r5, {r0, r1, r2, r3}
 457              		.loc 17 113 21 view .LVU102
 458 00ac 0222     		movs	r2, #2
 459 00ae 6946     		mov	r1, sp
 460 00b0 2D48     		ldr	r0, .L10+48
 461 00b2 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 462              	.LVL15:
 463              	.LBB415:
 464              	.LBI415:
 465              		.loc 4 23 5 is_stmt 1 view .LVU103
 466              		.loc 4 23 5 is_stmt 0 view .LVU104
 467              	.LBE415:
 114:my_multieffect.cpp ****     crushrate.Init(pod.knob2, 1, 50, crushrate.LOGARITHMIC);
 468              		.loc 17 114 5 is_stmt 1 view .LVU105
 469              		.loc 17 114 24 is_stmt 0 view .LVU106
 470 00b6 04F1100C 		add	ip, r4, #16
 471 00ba EE46     		mov	lr, sp
 472              		.loc 17 114 19 view .LVU107
 473 00bc B7EE000A 		vmov.f32	s0, #1.0e+0
 474 00c0 DFED2A0A 		vldr.32	s1, .L10+52
 475              		.loc 17 114 24 view .LVU108
 476 00c4 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 477 00c8 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 478 00cc 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 479 00d0 85E80F00 		stm	r5, {r0, r1, r2, r3}
 480              		.loc 17 114 19 view .LVU109
 481 00d4 6946     		mov	r1, sp
 482 00d6 0222     		movs	r2, #2
 483 00d8 2548     		ldr	r0, .L10+56
 484 00da FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
ARM GAS  /tmp/cckGrLHt.s 			page 24


 485              	.LVL16:
 486              	.LBB416:
 487              	.LBI416:
 488              		.loc 4 23 5 is_stmt 1 view .LVU110
 489              		.loc 4 23 5 is_stmt 0 view .LVU111
 490              	.LBE416:
 115:my_multieffect.cpp **** 
 116:my_multieffect.cpp ****     //reverb parameters
 117:my_multieffect.cpp ****     rev.SetLpFreq(18000.0f);
 491              		.loc 17 117 5 is_stmt 1 view .LVU112
 492              	.LBB417:
 493              	.LBI417:
  42:../../DaisySP//Source/Effects/reverbsc.h ****     /** Initializes the reverb module, and sets the sample_rate at which the Process function will 
  43:../../DaisySP//Source/Effects/reverbsc.h ****         Returns 0 if all good, or 1 if it runs out of delay times exceed maximum allowed.
  44:../../DaisySP//Source/Effects/reverbsc.h ****     */
  45:../../DaisySP//Source/Effects/reverbsc.h ****     int Init(float sample_rate);
  46:../../DaisySP//Source/Effects/reverbsc.h **** 
  47:../../DaisySP//Source/Effects/reverbsc.h ****     /** Process the input through the reverb, and updates values of out1, and out2 with the new pro
  48:../../DaisySP//Source/Effects/reverbsc.h ****     */
  49:../../DaisySP//Source/Effects/reverbsc.h ****     int Process(const float &in1, const float &in2, float *out1, float *out2);
  50:../../DaisySP//Source/Effects/reverbsc.h **** 
  51:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the reverb time. reverb tail becomes infinite when set to 1.0
  52:../../DaisySP//Source/Effects/reverbsc.h ****         \param fb - sets reverb time. range: 0.0 to 1.0
  53:../../DaisySP//Source/Effects/reverbsc.h ****     */
  54:../../DaisySP//Source/Effects/reverbsc.h ****     inline void SetFeedback(const float &fb) { feedback_ = fb; }
  55:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
  56:../../DaisySP//Source/Effects/reverbsc.h ****         \param freq - low pass frequency. range: 0.0 to sample_rate / 2
  57:../../DaisySP//Source/Effects/reverbsc.h ****     */
  58:../../DaisySP//Source/Effects/reverbsc.h ****     inline void SetLpFreq(const float &freq) { lpfreq_ = freq; }
 494              		.loc 1 58 17 view .LVU113
 495              	.LBB418:
 496              		.loc 1 58 48 view .LVU114
 497              	.LBE418:
 498              	.LBE417:
 118:my_multieffect.cpp ****     rev.SetFeedback(0.85f);
 119:my_multieffect.cpp **** 
 120:my_multieffect.cpp ****     //delay parameters
 121:my_multieffect.cpp ****     currentDelay = delayTarget = sample_rate * 0.75f;
 499              		.loc 17 121 46 is_stmt 0 view .LVU115
 500 00de F6EE087A 		vmov.f32	s15, #7.5e-1
 501              	.LBB421:
 502              	.LBB422:
  38:../../DaisySP//Source/Utility/delayline.h ****     }
  39:../../DaisySP//Source/Utility/delayline.h **** 
  40:../../DaisySP//Source/Utility/delayline.h ****     /** sets the delay time in samples
  41:../../DaisySP//Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  42:../../DaisySP//Source/Utility/delayline.h ****     */
  43:../../DaisySP//Source/Utility/delayline.h ****     inline void SetDelay(size_t delay)
  44:../../DaisySP//Source/Utility/delayline.h ****     {
  45:../../DaisySP//Source/Utility/delayline.h ****         frac_  = 0.0f;
  46:../../DaisySP//Source/Utility/delayline.h ****         delay_ = delay < max_size ? delay : max_size - 1;
  47:../../DaisySP//Source/Utility/delayline.h ****     }
  48:../../DaisySP//Source/Utility/delayline.h **** 
  49:../../DaisySP//Source/Utility/delayline.h ****     /** sets the delay time in samples
  50:../../DaisySP//Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  51:../../DaisySP//Source/Utility/delayline.h ****     */
  52:../../DaisySP//Source/Utility/delayline.h ****     inline void SetDelay(float delay)
ARM GAS  /tmp/cckGrLHt.s 			page 25


  53:../../DaisySP//Source/Utility/delayline.h ****     {
  54:../../DaisySP//Source/Utility/delayline.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  55:../../DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
  56:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 503              		.loc 16 56 60 view .LVU116
 504 00e2 244B     		ldr	r3, .L10+60
 505              	.LBE422:
 506              	.LBE421:
 122:my_multieffect.cpp ****     dell.SetDelay(currentDelay);
 123:my_multieffect.cpp ****     delr.SetDelay(currentDelay);
 124:my_multieffect.cpp **** 
 125:my_multieffect.cpp ****     // start callback
 126:my_multieffect.cpp ****     pod.StartAdc();
 507              		.loc 17 126 17 view .LVU117
 508 00e4 A4F17800 		sub	r0, r4, #120
 121:my_multieffect.cpp ****     dell.SetDelay(currentDelay);
 509              		.loc 17 121 46 view .LVU118
 510 00e8 68EE277A 		vmul.f32	s15, s16, s15
 511              	.LBB426:
 512              	.LBB423:
  54:../../DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
 513              		.loc 16 54 17 view .LVU119
 514 00ec BDEEE77A 		vcvt.s32.f32	s14, s15
 515              		.loc 16 56 60 view .LVU120
 516 00f0 17EE102A 		vmov	r2, s14	@ int
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 517              		.loc 16 55 37 view .LVU121
 518 00f4 F8EEC76A 		vcvt.f32.s32	s13, s14
 519              		.loc 16 56 60 view .LVU122
 520 00f8 9A42     		cmp	r2, r3
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 521              		.loc 16 55 35 view .LVU123
 522 00fa 77EEE66A 		vsub.f32	s13, s15, s13
 523              		.loc 16 56 60 view .LVU124
 524 00fe 28BF     		it	cs
 525 0100 1A46     		movcs	r2, r3
 526              	.LBE423:
 527              	.LBE426:
 528              	.LBB427:
 529              	.LBB428:
  54:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 530              		.loc 1 54 58 view .LVU125
 531 0102 1D4B     		ldr	r3, .L10+64
 532              	.LBE428:
 533              	.LBE427:
 534              	.LBB431:
 535              	.LBB424:
 536              		.loc 16 56 16 view .LVU126
 537 0104 46F8042C 		str	r2, [r6, #-4]
 538              	.LBE424:
 539              	.LBE431:
 540              	.LBB432:
 541              	.LBB433:
 542 0108 49F8042C 		str	r2, [r9, #-4]
 543              	.LBE433:
 544              	.LBE432:
 545              	.LBB435:
ARM GAS  /tmp/cckGrLHt.s 			page 26


 546              	.LBB419:
 547              		.loc 1 58 56 view .LVU127
 548 010c 1B4A     		ldr	r2, .L10+68
 549              	.LBE419:
 550              	.LBE435:
 551              	.LBB436:
 552              	.LBB429:
  54:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 553              		.loc 1 54 58 view .LVU128
 554 010e 3B60     		str	r3, [r7]	@ float
 555              	.LBE429:
 556              	.LBE436:
 557              	.LBB437:
 558              	.LBB420:
 559              		.loc 1 58 56 view .LVU129
 560 0110 7A60     		str	r2, [r7, #4]	@ float
 561              	.LVL17:
 562              		.loc 1 58 56 view .LVU130
 563              	.LBE420:
 564              	.LBE437:
 118:my_multieffect.cpp **** 
 565              		.loc 17 118 5 is_stmt 1 view .LVU131
 566              	.LBB438:
 567              	.LBI427:
  54:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 568              		.loc 1 54 17 view .LVU132
 569              	.LBB430:
  54:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 570              		.loc 1 54 48 view .LVU133
  54:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 571              		.loc 1 54 48 is_stmt 0 view .LVU134
 572              	.LBE430:
 573              	.LBE438:
 121:my_multieffect.cpp ****     dell.SetDelay(currentDelay);
 574              		.loc 17 121 5 is_stmt 1 view .LVU135
 121:my_multieffect.cpp ****     dell.SetDelay(currentDelay);
 575              		.loc 17 121 18 is_stmt 0 view .LVU136
 576 0112 1B4B     		ldr	r3, .L10+72
 121:my_multieffect.cpp ****     dell.SetDelay(currentDelay);
 577              		.loc 17 121 32 view .LVU137
 578 0114 1B4A     		ldr	r2, .L10+76
 579              	.LBB439:
 580              	.LBB425:
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 581              		.loc 16 55 27 view .LVU138
 582 0116 46ED036A 		vstr.32	s13, [r6, #-12]
 583              	.LBE425:
 584              	.LBE439:
 585              	.LBB440:
 586              	.LBB434:
 587 011a 49ED036A 		vstr.32	s13, [r9, #-12]
 588              	.LBE434:
 589              	.LBE440:
 121:my_multieffect.cpp ****     dell.SetDelay(currentDelay);
 590              		.loc 17 121 32 view .LVU139
 591 011e C2ED007A 		vstr.32	s15, [r2]
 121:my_multieffect.cpp ****     dell.SetDelay(currentDelay);
ARM GAS  /tmp/cckGrLHt.s 			page 27


 592              		.loc 17 121 18 view .LVU140
 593 0122 C3ED007A 		vstr.32	s15, [r3]
 122:my_multieffect.cpp ****     delr.SetDelay(currentDelay);
 594              		.loc 17 122 5 is_stmt 1 view .LVU141
 595              	.LVL18:
 596              	.LBB441:
 597              	.LBI421:
  52:../../DaisySP//Source/Utility/delayline.h ****     {
 598              		.loc 16 52 17 view .LVU142
  52:../../DaisySP//Source/Utility/delayline.h ****     {
 599              		.loc 16 52 17 is_stmt 0 view .LVU143
 600              	.LBE441:
 123:my_multieffect.cpp **** 
 601              		.loc 17 123 5 is_stmt 1 view .LVU144
 602              	.LBB442:
 603              	.LBI432:
  52:../../DaisySP//Source/Utility/delayline.h ****     {
 604              		.loc 16 52 17 view .LVU145
  52:../../DaisySP//Source/Utility/delayline.h ****     {
 605              		.loc 16 52 17 is_stmt 0 view .LVU146
 606              	.LBE442:
 607              		.loc 17 126 5 is_stmt 1 view .LVU147
 608              		.loc 17 126 17 is_stmt 0 view .LVU148
 609 0126 FFF7FEFF 		bl	_ZN5daisy8DaisyPod8StartAdcEv
 610              	.LVL19:
 127:my_multieffect.cpp ****     pod.StartAudio(AudioCallback);
 611              		.loc 17 127 5 is_stmt 1 view .LVU149
 612              		.loc 17 127 19 is_stmt 0 view .LVU150
 613 012a 1749     		ldr	r1, .L10+80
 614 012c A4F17800 		sub	r0, r4, #120
 615 0130 FFF7FEFF 		bl	_ZN5daisy8DaisyPod10StartAudioEPFvPKfPfjE
 616              	.LVL20:
 617              	.L8:
 128:my_multieffect.cpp **** 
 129:my_multieffect.cpp ****     while(1) {}
 618              		.loc 17 129 5 is_stmt 1 discriminator 1 view .LVU151
 619              		.loc 17 129 5 discriminator 1 view .LVU152
 620              		.loc 17 129 5 discriminator 1 view .LVU153
 621              		.loc 17 129 5 discriminator 1 view .LVU154
 622 0134 FEE7     		b	.L8
 623              	.L11:
 624 0136 00BF     		.align	3
 625              	.L10:
 626 0138 9A999999 		.word	-1717986918
 627 013c 9999A93F 		.word	1068079513
 628 0140 00000000 		.word	_ZL3pod
 629 0144 00000000 		.word	_ZL3rev
 630 0148 18530700 		.word	_ZL4dell+12
 631 014c 00530700 		.word	480000
 632 0150 00000000 		.word	.LANCHOR0
 633 0154 68000000 		.word	_ZL3pod+104
 634 0158 0060EA47 		.word	1206542336
 635 015c 00000000 		.word	.LANCHOR1
 636 0160 00409C46 		.word	1184645120
 637 0164 0000FA43 		.word	1140457472
 638 0168 00000000 		.word	.LANCHOR2
 639 016c 00004842 		.word	1112014848
ARM GAS  /tmp/cckGrLHt.s 			page 28


 640 0170 00000000 		.word	.LANCHOR3
 641 0174 BFD40100 		.word	119999
 642 0178 9A99593F 		.word	1062836634
 643 017c 00A08C46 		.word	1183621120
 644 0180 00000000 		.word	.LANCHOR5
 645 0184 00000000 		.word	.LANCHOR4
 646 0188 00000000 		.word	_Z13AudioCallbackPKfPfj
 647 018c 0C000000 		.word	_ZL4delr+12
 648              		.cfi_endproc
 649              	.LFE4824:
 651              		.section	.text._Z11UpdateKnobsRfS_,"ax",%progbits
 652              		.align	1
 653              		.p2align 2,,3
 654              		.global	_Z11UpdateKnobsRfS_
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 659              	_Z11UpdateKnobsRfS_:
 660              	.LVL21:
 661              	.LFB4825:
 130:my_multieffect.cpp **** }
 131:my_multieffect.cpp **** 
 132:my_multieffect.cpp **** void UpdateKnobs(float &k1, float &k2) {
 662              		.loc 17 132 40 view -0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 133:my_multieffect.cpp ****     k1 = pod.knob1.Process();
 666              		.loc 17 133 5 view .LVU156
 132:my_multieffect.cpp ****     k1 = pod.knob1.Process();
 667              		.loc 17 132 40 is_stmt 0 view .LVU157
 668 0000 38B5     		push	{r3, r4, r5, lr}
 669              		.cfi_def_cfa_offset 16
 670              		.cfi_offset 3, -16
 671              		.cfi_offset 4, -12
 672              		.cfi_offset 5, -8
 673              		.cfi_offset 14, -4
 132:my_multieffect.cpp ****     k1 = pod.knob1.Process();
 674              		.loc 17 132 40 view .LVU158
 675 0002 0546     		mov	r5, r0
 676              		.loc 17 133 27 view .LVU159
 677 0004 1B48     		ldr	r0, .L18
 678              	.LVL22:
 132:my_multieffect.cpp ****     k1 = pod.knob1.Process();
 679              		.loc 17 132 40 view .LVU160
 680 0006 0C46     		mov	r4, r1
 681              		.loc 17 133 27 view .LVU161
 682 0008 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 683              	.LVL23:
 134:my_multieffect.cpp ****     k2 = pod.knob2.Process();
 684              		.loc 17 134 27 view .LVU162
 685 000c 1A48     		ldr	r0, .L18+4
 133:my_multieffect.cpp ****     k1 = pod.knob1.Process();
 686              		.loc 17 133 8 view .LVU163
 687 000e 85ED000A 		vstr.32	s0, [r5]
 688              		.loc 17 134 5 is_stmt 1 view .LVU164
 689              		.loc 17 134 27 is_stmt 0 view .LVU165
ARM GAS  /tmp/cckGrLHt.s 			page 29


 690 0012 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 691              	.LVL24:
 135:my_multieffect.cpp **** 
 136:my_multieffect.cpp ****     switch(mode) {
 692              		.loc 17 136 5 view .LVU166
 693 0016 194B     		ldr	r3, .L18+8
 134:my_multieffect.cpp ****     k2 = pod.knob2.Process();
 694              		.loc 17 134 8 view .LVU167
 695 0018 84ED000A 		vstr.32	s0, [r4]
 696              		.loc 17 136 5 is_stmt 1 view .LVU168
 697 001c 1B68     		ldr	r3, [r3]
 698 001e 012B     		cmp	r3, #1
 699 0020 1ED0     		beq	.L13
 700 0022 022B     		cmp	r3, #2
 701 0024 08D0     		beq	.L14
 702 0026 03B1     		cbz	r3, .L17
 137:my_multieffect.cpp ****         case REV:
 138:my_multieffect.cpp ****             drywet = k1;
 139:my_multieffect.cpp ****             rev.SetFeedback(k2);
 140:my_multieffect.cpp ****             break;
 141:my_multieffect.cpp ****         case DEL:
 142:my_multieffect.cpp ****             delayTarget = deltime.Process();
 143:my_multieffect.cpp ****             feedback    = k2;
 144:my_multieffect.cpp ****             break;
 145:my_multieffect.cpp ****         case CRU:
 146:my_multieffect.cpp ****             cutoff = cutoffParam.Process();
 147:my_multieffect.cpp ****             tone.SetFreq(cutoff);
 148:my_multieffect.cpp ****             crushmod = (int)crushrate.Process();
 149:my_multieffect.cpp ****     }
 150:my_multieffect.cpp **** }
 703              		.loc 17 150 1 is_stmt 0 view .LVU169
 704 0028 38BD     		pop	{r3, r4, r5, pc}
 705              	.LVL25:
 706              	.L17:
 137:my_multieffect.cpp ****         case REV:
 707              		.loc 17 137 9 is_stmt 1 view .LVU170
 138:my_multieffect.cpp ****             rev.SetFeedback(k2);
 708              		.loc 17 138 13 view .LVU171
 138:my_multieffect.cpp ****             rev.SetFeedback(k2);
 709              		.loc 17 138 22 is_stmt 0 view .LVU172
 710 002a 2968     		ldr	r1, [r5]	@ float
 138:my_multieffect.cpp ****             rev.SetFeedback(k2);
 711              		.loc 17 138 20 view .LVU173
 712 002c 144A     		ldr	r2, .L18+12
 713              	.LBB443:
 714              	.LBB444:
  54:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 715              		.loc 1 54 58 view .LVU174
 716 002e 154B     		ldr	r3, .L18+16
 717              	.LBE444:
 718              	.LBE443:
 138:my_multieffect.cpp ****             rev.SetFeedback(k2);
 719              		.loc 17 138 20 view .LVU175
 720 0030 1160     		str	r1, [r2]	@ float
 139:my_multieffect.cpp ****             break;
 721              		.loc 17 139 13 is_stmt 1 view .LVU176
 722              	.LVL26:
ARM GAS  /tmp/cckGrLHt.s 			page 30


 723              	.LBB446:
 724              	.LBI443:
  54:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 725              		.loc 1 54 17 view .LVU177
 726              	.LBB445:
  54:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 727              		.loc 1 54 48 view .LVU178
  54:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 728              		.loc 1 54 60 is_stmt 0 view .LVU179
 729 0032 2268     		ldr	r2, [r4]	@ float
  54:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
 730              		.loc 1 54 58 view .LVU180
 731 0034 1A60     		str	r2, [r3]	@ float
 732              	.LBE445:
 733              	.LBE446:
 734              		.loc 17 150 1 view .LVU181
 735 0036 38BD     		pop	{r3, r4, r5, pc}
 736              	.LVL27:
 737              	.L14:
 145:my_multieffect.cpp ****             cutoff = cutoffParam.Process();
 738              		.loc 17 145 9 is_stmt 1 view .LVU182
 146:my_multieffect.cpp ****             tone.SetFreq(cutoff);
 739              		.loc 17 146 13 view .LVU183
 146:my_multieffect.cpp ****             tone.SetFreq(cutoff);
 740              		.loc 17 146 41 is_stmt 0 view .LVU184
 741 0038 1348     		ldr	r0, .L18+20
 742 003a FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 743              	.LVL28:
 146:my_multieffect.cpp ****             tone.SetFreq(cutoff);
 744              		.loc 17 146 20 view .LVU185
 745 003e 134B     		ldr	r3, .L18+24
 746              	.LBB447:
 747              	.LBB448:
  17:../../DaisySP//Source/Filters/tone.h ****     /** Initializes the Tone module.
  18:../../DaisySP//Source/Filters/tone.h ****         sample_rate - The sample rate of the audio engine being run. 
  19:../../DaisySP//Source/Filters/tone.h ****     */
  20:../../DaisySP//Source/Filters/tone.h ****     void Init(float sample_rate);
  21:../../DaisySP//Source/Filters/tone.h **** 
  22:../../DaisySP//Source/Filters/tone.h **** 
  23:../../DaisySP//Source/Filters/tone.h ****     /** Processes one sample through the filter and returns one sample.
  24:../../DaisySP//Source/Filters/tone.h ****         in - input signal 
  25:../../DaisySP//Source/Filters/tone.h ****     */
  26:../../DaisySP//Source/Filters/tone.h ****     float Process(float in);
  27:../../DaisySP//Source/Filters/tone.h **** 
  28:../../DaisySP//Source/Filters/tone.h ****     /** Sets the cutoff frequency or half-way point of the filter.
  29:../../DaisySP//Source/Filters/tone.h **** 
  30:../../DaisySP//Source/Filters/tone.h ****         \param freq - frequency value in Hz. Range: Any positive value.
  31:../../DaisySP//Source/Filters/tone.h ****     */
  32:../../DaisySP//Source/Filters/tone.h ****     inline void SetFreq(float freq)
  33:../../DaisySP//Source/Filters/tone.h ****     {
  34:../../DaisySP//Source/Filters/tone.h ****         freq_ = freq;
 748              		.loc 2 34 15 view .LVU186
 749 0040 1348     		ldr	r0, .L18+28
 750              	.LBE448:
 751              	.LBE447:
 146:my_multieffect.cpp ****             tone.SetFreq(cutoff);
 752              		.loc 17 146 20 view .LVU187
ARM GAS  /tmp/cckGrLHt.s 			page 31


 753 0042 83ED000A 		vstr.32	s0, [r3]
 147:my_multieffect.cpp ****             crushmod = (int)crushrate.Process();
 754              		.loc 17 147 13 is_stmt 1 view .LVU188
 755              	.LVL29:
 756              	.LBB450:
 757              	.LBI447:
  32:../../DaisySP//Source/Filters/tone.h ****     {
 758              		.loc 2 32 17 view .LVU189
 759              	.LBB449:
 760              		.loc 2 34 9 view .LVU190
 761              		.loc 2 34 15 is_stmt 0 view .LVU191
 762 0046 80ED030A 		vstr.32	s0, [r0, #12]
  35:../../DaisySP//Source/Filters/tone.h ****         CalculateCoefficients();
 763              		.loc 2 35 9 is_stmt 1 view .LVU192
 764              		.loc 2 35 30 is_stmt 0 view .LVU193
 765 004a FFF7FEFF 		bl	_ZN7daisysp4Tone21CalculateCoefficientsEv
 766              	.LVL30:
 767              		.loc 2 35 30 view .LVU194
 768              	.LBE449:
 769              	.LBE450:
 148:my_multieffect.cpp ****     }
 770              		.loc 17 148 13 is_stmt 1 view .LVU195
 148:my_multieffect.cpp ****     }
 771              		.loc 17 148 46 is_stmt 0 view .LVU196
 772 004e 1148     		ldr	r0, .L18+32
 773 0050 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 774              	.LVL31:
 148:my_multieffect.cpp ****     }
 775              		.loc 17 148 24 view .LVU197
 776 0054 BDEEC00A 		vcvt.s32.f32	s0, s0
 148:my_multieffect.cpp ****     }
 777              		.loc 17 148 22 view .LVU198
 778 0058 0F4B     		ldr	r3, .L18+36
 148:my_multieffect.cpp ****     }
 779              		.loc 17 148 24 view .LVU199
 780 005a 83ED000A 		vstr.32	s0, [r3]	@ int
 781              		.loc 17 150 1 view .LVU200
 782 005e 38BD     		pop	{r3, r4, r5, pc}
 783              	.LVL32:
 784              	.L13:
 141:my_multieffect.cpp ****             delayTarget = deltime.Process();
 785              		.loc 17 141 9 is_stmt 1 view .LVU201
 142:my_multieffect.cpp ****             feedback    = k2;
 786              		.loc 17 142 13 view .LVU202
 142:my_multieffect.cpp ****             feedback    = k2;
 787              		.loc 17 142 42 is_stmt 0 view .LVU203
 788 0060 0E48     		ldr	r0, .L18+40
 789 0062 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 790              	.LVL33:
 142:my_multieffect.cpp ****             feedback    = k2;
 791              		.loc 17 142 25 view .LVU204
 792 0066 0E4A     		ldr	r2, .L18+44
 143:my_multieffect.cpp ****             break;
 793              		.loc 17 143 25 view .LVU205
 794 0068 0E4B     		ldr	r3, .L18+48
 142:my_multieffect.cpp ****             feedback    = k2;
 795              		.loc 17 142 25 view .LVU206
ARM GAS  /tmp/cckGrLHt.s 			page 32


 796 006a 82ED000A 		vstr.32	s0, [r2]
 143:my_multieffect.cpp ****             break;
 797              		.loc 17 143 13 is_stmt 1 view .LVU207
 143:my_multieffect.cpp ****             break;
 798              		.loc 17 143 27 is_stmt 0 view .LVU208
 799 006e 2268     		ldr	r2, [r4]	@ float
 143:my_multieffect.cpp ****             break;
 800              		.loc 17 143 25 view .LVU209
 801 0070 1A60     		str	r2, [r3]	@ float
 144:my_multieffect.cpp ****         case CRU:
 802              		.loc 17 144 13 is_stmt 1 view .LVU210
 803              		.loc 17 150 1 is_stmt 0 view .LVU211
 804 0072 38BD     		pop	{r3, r4, r5, pc}
 805              	.LVL34:
 806              	.L19:
 807              		.loc 17 150 1 view .LVU212
 808              		.align	2
 809              	.L18:
 810 0074 68000000 		.word	_ZL3pod+104
 811 0078 88000000 		.word	_ZL3pod+136
 812 007c 00000000 		.word	.LANCHOR6
 813 0080 00000000 		.word	.LANCHOR7
 814 0084 00000000 		.word	_ZL3rev
 815 0088 00000000 		.word	.LANCHOR2
 816 008c 00000000 		.word	.LANCHOR9
 817 0090 00000000 		.word	.LANCHOR0
 818 0094 00000000 		.word	.LANCHOR3
 819 0098 00000000 		.word	.LANCHOR10
 820 009c 00000000 		.word	.LANCHOR1
 821 00a0 00000000 		.word	.LANCHOR4
 822 00a4 00000000 		.word	.LANCHOR8
 823              		.cfi_endproc
 824              	.LFE4825:
 826              		.section	.text._Z13UpdateEncoderv,"ax",%progbits
 827              		.align	1
 828              		.p2align 2,,3
 829              		.global	_Z13UpdateEncoderv
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 834              	_Z13UpdateEncoderv:
 835              	.LFB4826:
 151:my_multieffect.cpp **** 
 152:my_multieffect.cpp **** void UpdateEncoder() {
 836              		.loc 17 152 22 is_stmt 1 view -0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 153:my_multieffect.cpp ****     mode = mode + pod.encoder.Increment();
 841              		.loc 17 153 5 view .LVU214
 842              	.LVL35:
 843              	.LBB453:
 844              	.LBI453:
  22:../../libDaisy//src/hid/encoder.h **** 
  23:../../libDaisy//src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../../libDaisy//src/hid/encoder.h ****      * Update rate is to be deprecated in a future release
ARM GAS  /tmp/cckGrLHt.s 			page 33


  25:../../libDaisy//src/hid/encoder.h ****      */
  26:../../libDaisy//src/hid/encoder.h ****     void Init(dsy_gpio_pin a,
  27:../../libDaisy//src/hid/encoder.h ****               dsy_gpio_pin b,
  28:../../libDaisy//src/hid/encoder.h ****               dsy_gpio_pin click,
  29:../../libDaisy//src/hid/encoder.h ****               float        update_rate = 0.f);
  30:../../libDaisy//src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:../../libDaisy//src/hid/encoder.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:../../libDaisy//src/hid/encoder.h ****      */
  33:../../libDaisy//src/hid/encoder.h ****     void Debounce();
  34:../../libDaisy//src/hid/encoder.h **** 
  35:../../libDaisy//src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  36:../../libDaisy//src/hid/encoder.h ****     inline int32_t Increment() const { return updated_ ? inc_ : 0; }
 845              		.loc 10 36 20 view .LVU215
 846              	.LBB454:
 847              		.loc 10 36 40 view .LVU216
 848              		.loc 10 36 47 is_stmt 0 view .LVU217
 849 0000 0E4A     		ldr	r2, .L24
 850              		.loc 10 36 56 view .LVU218
 851 0002 92F84430 		ldrb	r3, [r2, #68]	@ zero_extendqisi2
 852              	.LBE454:
 853              	.LBE453:
 152:my_multieffect.cpp ****     mode = mode + pod.encoder.Increment();
 854              		.loc 17 152 22 view .LVU219
 855 0006 10B4     		push	{r4}
 856              		.cfi_def_cfa_offset 4
 857              		.cfi_offset 4, -4
 858              	.LBB456:
 859              	.LBB455:
 860              		.loc 10 36 56 view .LVU220
 861 0008 03B1     		cbz	r3, .L21
 862 000a 536E     		ldr	r3, [r2, #100]
 863              	.L21:
 864              	.LVL36:
 865              		.loc 10 36 56 view .LVU221
 866              	.LBE455:
 867              	.LBE456:
 154:my_multieffect.cpp ****     mode = (mode % 3 + 3) % 3;
 868              		.loc 17 154 5 is_stmt 1 view .LVU222
 869              		.loc 17 154 10 is_stmt 0 view .LVU223
 870 000c 0C48     		ldr	r0, .L24+4
 871              		.loc 17 154 18 view .LVU224
 872 000e 0D4A     		ldr	r2, .L24+8
 153:my_multieffect.cpp ****     mode = (mode % 3 + 3) % 3;
 873              		.loc 17 153 17 view .LVU225
 874 0010 0468     		ldr	r4, [r0]
 875              		.loc 17 154 27 view .LVU226
 876 0012 0D49     		ldr	r1, .L24+12
 153:my_multieffect.cpp ****     mode = (mode % 3 + 3) % 3;
 877              		.loc 17 153 17 view .LVU227
 878 0014 2344     		add	r3, r3, r4
 879              		.loc 17 154 18 view .LVU228
 880 0016 82FB0342 		smull	r4, r2, r2, r3
 155:my_multieffect.cpp **** }
 881              		.loc 17 155 1 view .LVU229
 882 001a 5DF8044B 		ldr	r4, [sp], #4
 883              		.cfi_restore 4
 884              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cckGrLHt.s 			page 34


 154:my_multieffect.cpp ****     mode = (mode % 3 + 3) % 3;
 885              		.loc 17 154 18 view .LVU230
 886 001e A2EBE372 		sub	r2, r2, r3, asr #31
 887 0022 02EB4202 		add	r2, r2, r2, lsl #1
 888 0026 9B1A     		subs	r3, r3, r2
 154:my_multieffect.cpp ****     mode = (mode % 3 + 3) % 3;
 889              		.loc 17 154 22 view .LVU231
 890 0028 0333     		adds	r3, r3, #3
 154:my_multieffect.cpp ****     mode = (mode % 3 + 3) % 3;
 891              		.loc 17 154 27 view .LVU232
 892 002a A1FB0312 		umull	r1, r2, r1, r3
 893 002e 22F00101 		bic	r1, r2, #1
 894 0032 01EB5202 		add	r2, r1, r2, lsr #1
 895 0036 9B1A     		subs	r3, r3, r2
 154:my_multieffect.cpp ****     mode = (mode % 3 + 3) % 3;
 896              		.loc 17 154 10 view .LVU233
 897 0038 0360     		str	r3, [r0]
 898              		.loc 17 155 1 view .LVU234
 899 003a 7047     		bx	lr
 900              	.L25:
 901              		.align	2
 902              	.L24:
 903 003c 00000000 		.word	_ZL3pod
 904 0040 00000000 		.word	.LANCHOR6
 905 0044 56555555 		.word	1431655766
 906 0048 ABAAAAAA 		.word	-1431655765
 907              		.cfi_endproc
 908              	.LFE4826:
 910              		.section	.text._Z10UpdateLedsff,"ax",%progbits
 911              		.align	1
 912              		.p2align 2,,3
 913              		.global	_Z10UpdateLedsff
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 918              	_Z10UpdateLedsff:
 919              	.LVL37:
 920              	.LFB4827:
 156:my_multieffect.cpp **** 
 157:my_multieffect.cpp **** void UpdateLeds(float k1, float k2) {
 921              		.loc 17 157 37 is_stmt 1 view -0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 158:my_multieffect.cpp ****     pod.led1.Set(
 925              		.loc 17 158 5 view .LVU236
 157:my_multieffect.cpp ****     pod.led1.Set(
 926              		.loc 17 157 37 is_stmt 0 view .LVU237
 927 0000 10B5     		push	{r4, lr}
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 4, -8
 930              		.cfi_offset 14, -4
 159:my_multieffect.cpp ****         k1 * (mode == 2), k1 * (mode == 1), k1 * (mode == 0 || mode == 2));
 931              		.loc 17 159 20 view .LVU238
 932 0002 254C     		ldr	r4, .L36
 157:my_multieffect.cpp ****     pod.led1.Set(
 933              		.loc 17 157 37 view .LVU239
ARM GAS  /tmp/cckGrLHt.s 			page 35


 934 0004 F0EE407A 		vmov.f32	s15, s0
 935              		.loc 17 159 20 view .LVU240
 936 0008 2368     		ldr	r3, [r4]
 158:my_multieffect.cpp ****     pod.led1.Set(
 937              		.loc 17 158 17 view .LVU241
 938 000a 022B     		cmp	r3, #2
 157:my_multieffect.cpp ****     pod.led1.Set(
 939              		.loc 17 157 37 view .LVU242
 940 000c 2DED028B 		vpush.64	{d8}
 941              		.cfi_def_cfa_offset 16
 942              		.cfi_offset 80, -16
 943              		.cfi_offset 81, -12
 157:my_multieffect.cpp ****     pod.led1.Set(
 944              		.loc 17 157 37 view .LVU243
 945 0010 B0EE608A 		vmov.f32	s16, s1
 158:my_multieffect.cpp ****     pod.led1.Set(
 946              		.loc 17 158 17 view .LVU244
 947 0014 33D0     		beq	.L34
 158:my_multieffect.cpp ****     pod.led1.Set(
 948              		.loc 17 158 17 discriminator 4 view .LVU245
 949 0016 9FED210A 		vldr.32	s0, .L36+4
 950              	.LVL38:
 158:my_multieffect.cpp ****     pod.led1.Set(
 951              		.loc 17 158 17 discriminator 4 view .LVU246
 952 001a 012B     		cmp	r3, #1
 953 001c 27EE800A 		vmul.f32	s0, s15, s0
 954 0020 47FE800A 		vseleq.f32	s1, s15, s0
 955              	.LVL39:
 956              	.L28:
 957              		.loc 17 159 61 discriminator 8 view .LVU247
 958 0024 33F00203 		bics	r3, r3, #2
 158:my_multieffect.cpp ****     pod.led1.Set(
 959              		.loc 17 158 17 discriminator 8 view .LVU248
 960 0028 1D48     		ldr	r0, .L36+8
 961              		.loc 17 159 61 discriminator 8 view .LVU249
 962 002a 0CBF     		ite	eq
 963 002c 0123     		moveq	r3, #1
 964 002e 0023     		movne	r3, #0
 965 0030 01EE103A 		vmov	s2, r3	@ int
 158:my_multieffect.cpp ****     pod.led1.Set(
 966              		.loc 17 158 17 discriminator 8 view .LVU250
 967 0034 B8EEC11A 		vcvt.f32.s32	s2, s2
 968 0038 21EE271A 		vmul.f32	s2, s2, s15
 969 003c FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 970              	.LVL40:
 160:my_multieffect.cpp ****     pod.led2.Set(
 971              		.loc 17 160 5 is_stmt 1 discriminator 8 view .LVU251
 161:my_multieffect.cpp ****         k2 * (mode == 2), k2 * (mode == 1), k2 * (mode == 0 || mode == 2));
 972              		.loc 17 161 20 is_stmt 0 discriminator 8 view .LVU252
 973 0040 2368     		ldr	r3, [r4]
 160:my_multieffect.cpp ****     pod.led2.Set(
 974              		.loc 17 160 17 discriminator 8 view .LVU253
 975 0042 022B     		cmp	r3, #2
 976 0044 20D0     		beq	.L35
 160:my_multieffect.cpp ****     pod.led2.Set(
 977              		.loc 17 160 17 discriminator 4 view .LVU254
 978 0046 9FED150A 		vldr.32	s0, .L36+4
ARM GAS  /tmp/cckGrLHt.s 			page 36


 979 004a 012B     		cmp	r3, #1
 980 004c 28EE000A 		vmul.f32	s0, s16, s0
 981 0050 48FE000A 		vseleq.f32	s1, s16, s0
 982              	.L30:
 983              		.loc 17 161 61 discriminator 8 view .LVU255
 984 0054 33F00203 		bics	r3, r3, #2
 160:my_multieffect.cpp ****     pod.led2.Set(
 985              		.loc 17 160 17 discriminator 8 view .LVU256
 986 0058 1248     		ldr	r0, .L36+12
 987              		.loc 17 161 61 discriminator 8 view .LVU257
 988 005a 0CBF     		ite	eq
 989 005c 0123     		moveq	r3, #1
 990 005e 0023     		movne	r3, #0
 991 0060 01EE103A 		vmov	s2, r3	@ int
 160:my_multieffect.cpp ****     pod.led2.Set(
 992              		.loc 17 160 17 discriminator 8 view .LVU258
 993 0064 B8EEC11A 		vcvt.f32.s32	s2, s2
 994 0068 21EE081A 		vmul.f32	s2, s2, s16
 995 006c FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 996              	.LVL41:
 162:my_multieffect.cpp **** 
 163:my_multieffect.cpp ****     pod.UpdateLeds();
 997              		.loc 17 163 5 is_stmt 1 discriminator 8 view .LVU259
 998              		.loc 17 163 19 is_stmt 0 discriminator 8 view .LVU260
 999 0070 0D48     		ldr	r0, .L36+16
 164:my_multieffect.cpp **** }
 1000              		.loc 17 164 1 discriminator 8 view .LVU261
 1001 0072 BDEC028B 		vldm	sp!, {d8}
 1002              		.cfi_remember_state
 1003              		.cfi_restore 80
 1004              		.cfi_restore 81
 1005              		.cfi_def_cfa_offset 8
 1006              	.LVL42:
 1007              		.loc 17 164 1 discriminator 8 view .LVU262
 1008 0076 BDE81040 		pop	{r4, lr}
 1009              		.cfi_restore 14
 1010              		.cfi_restore 4
 1011              		.cfi_def_cfa_offset 0
 163:my_multieffect.cpp **** }
 1012              		.loc 17 163 19 discriminator 8 view .LVU263
 1013 007a FFF7FEBF 		b	_ZN5daisy8DaisyPod10UpdateLedsEv
 1014              	.LVL43:
 1015              	.L34:
 1016              		.cfi_restore_state
 158:my_multieffect.cpp ****         k1 * (mode == 2), k1 * (mode == 1), k1 * (mode == 0 || mode == 2));
 1017              		.loc 17 158 17 view .LVU264
 1018 007e DFED070A 		vldr.32	s1, .L36+4
 1019              	.LVL44:
 158:my_multieffect.cpp ****         k1 * (mode == 2), k1 * (mode == 1), k1 * (mode == 0 || mode == 2));
 1020              		.loc 17 158 17 view .LVU265
 1021 0082 60EE200A 		vmul.f32	s1, s0, s1
 1022 0086 CDE7     		b	.L28
 1023              	.LVL45:
 1024              	.L35:
 160:my_multieffect.cpp ****         k2 * (mode == 2), k2 * (mode == 1), k2 * (mode == 0 || mode == 2));
 1025              		.loc 17 160 17 view .LVU266
 1026 0088 DFED040A 		vldr.32	s1, .L36+4
ARM GAS  /tmp/cckGrLHt.s 			page 37


 1027 008c B0EE480A 		vmov.f32	s0, s16
 1028 0090 68EE200A 		vmul.f32	s1, s16, s1
 1029 0094 DEE7     		b	.L30
 1030              	.L37:
 1031 0096 00BF     		.align	2
 1032              	.L36:
 1033 0098 00000000 		.word	.LANCHOR6
 1034 009c 00000000 		.word	0
 1035 00a0 D8000000 		.word	_ZL3pod+216
 1036 00a4 2C010000 		.word	_ZL3pod+300
 1037 00a8 00000000 		.word	_ZL3pod
 1038              		.cfi_endproc
 1039              	.LFE4827:
 1041              		.section	.text._Z8Controlsv,"ax",%progbits
 1042              		.align	1
 1043              		.p2align 2,,3
 1044              		.global	_Z8Controlsv
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1049              	_Z8Controlsv:
 1050              	.LFB4828:
 165:my_multieffect.cpp **** 
 166:my_multieffect.cpp **** void Controls() {
 1051              		.loc 17 166 17 is_stmt 1 view -0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 8
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 167:my_multieffect.cpp ****     float k1, k2;
 1055              		.loc 17 167 5 view .LVU268
 168:my_multieffect.cpp ****     delayTarget = feedback = drywet = 0;
 1056              		.loc 17 168 5 view .LVU269
 166:my_multieffect.cpp ****     float k1, k2;
 1057              		.loc 17 166 17 is_stmt 0 view .LVU270
 1058 0000 10B5     		push	{r4, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 4, -8
 1061              		.cfi_offset 14, -4
 1062              		.loc 17 168 37 view .LVU271
 1063 0002 0023     		movs	r3, #0
 169:my_multieffect.cpp **** 
 170:my_multieffect.cpp ****     pod.ProcessAnalogControls();
 1064              		.loc 17 170 30 view .LVU272
 1065 0004 194C     		ldr	r4, .L42
 168:my_multieffect.cpp **** 
 1066              		.loc 17 168 37 view .LVU273
 1067 0006 1A48     		ldr	r0, .L42+4
 166:my_multieffect.cpp ****     float k1, k2;
 1068              		.loc 17 166 17 view .LVU274
 1069 0008 82B0     		sub	sp, sp, #8
 1070              		.cfi_def_cfa_offset 16
 168:my_multieffect.cpp **** 
 1071              		.loc 17 168 28 view .LVU275
 1072 000a 1A49     		ldr	r1, .L42+8
 168:my_multieffect.cpp **** 
 1073              		.loc 17 168 17 view .LVU276
 1074 000c 1A4A     		ldr	r2, .L42+12
ARM GAS  /tmp/cckGrLHt.s 			page 38


 168:my_multieffect.cpp **** 
 1075              		.loc 17 168 37 view .LVU277
 1076 000e 0360     		str	r3, [r0]	@ float
 1077              		.loc 17 170 30 view .LVU278
 1078 0010 2046     		mov	r0, r4
 168:my_multieffect.cpp **** 
 1079              		.loc 17 168 28 view .LVU279
 1080 0012 0B60     		str	r3, [r1]	@ float
 168:my_multieffect.cpp **** 
 1081              		.loc 17 168 17 view .LVU280
 1082 0014 1360     		str	r3, [r2]	@ float
 1083              		.loc 17 170 5 is_stmt 1 view .LVU281
 1084              		.loc 17 170 30 is_stmt 0 view .LVU282
 1085 0016 FFF7FEFF 		bl	_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
 1086              	.LVL46:
 171:my_multieffect.cpp ****     pod.ProcessDigitalControls();
 1087              		.loc 17 171 5 is_stmt 1 view .LVU283
 1088              		.loc 17 171 31 is_stmt 0 view .LVU284
 1089 001a 2046     		mov	r0, r4
 1090 001c FFF7FEFF 		bl	_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
 1091              	.LVL47:
 172:my_multieffect.cpp **** 
 173:my_multieffect.cpp ****     UpdateKnobs(k1, k2);
 1092              		.loc 17 173 5 is_stmt 1 view .LVU285
 1093              		.loc 17 173 16 is_stmt 0 view .LVU286
 1094 0020 01A9     		add	r1, sp, #4
 1095 0022 6846     		mov	r0, sp
 1096 0024 FFF7FEFF 		bl	_Z11UpdateKnobsRfS_
 1097              	.LVL48:
 174:my_multieffect.cpp ****     UpdateEncoder();
 1098              		.loc 17 174 5 is_stmt 1 view .LVU287
 1099              	.LBB461:
 1100              	.LBI461:
 152:my_multieffect.cpp ****     mode = mode + pod.encoder.Increment();
 1101              		.loc 17 152 6 view .LVU288
 1102              	.LBB462:
 153:my_multieffect.cpp ****     mode = (mode % 3 + 3) % 3;
 1103              		.loc 17 153 5 view .LVU289
 1104              	.LBB463:
 1105              	.LBI463:
 1106              		.loc 10 36 20 view .LVU290
 1107              	.LBB464:
 1108              		.loc 10 36 40 view .LVU291
 1109              		.loc 10 36 56 is_stmt 0 view .LVU292
 1110 0028 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1111 002c 03B1     		cbz	r3, .L39
 1112 002e 636E     		ldr	r3, [r4, #100]
 1113              	.L39:
 1114              	.LVL49:
 1115              		.loc 10 36 56 view .LVU293
 1116              	.LBE464:
 1117              	.LBE463:
 154:my_multieffect.cpp **** }
 1118              		.loc 17 154 5 is_stmt 1 view .LVU294
 154:my_multieffect.cpp **** }
 1119              		.loc 17 154 10 is_stmt 0 view .LVU295
 1120 0030 1248     		ldr	r0, .L42+16
ARM GAS  /tmp/cckGrLHt.s 			page 39


 154:my_multieffect.cpp **** }
 1121              		.loc 17 154 18 view .LVU296
 1122 0032 134A     		ldr	r2, .L42+20
 153:my_multieffect.cpp ****     mode = (mode % 3 + 3) % 3;
 1123              		.loc 17 153 17 view .LVU297
 1124 0034 0468     		ldr	r4, [r0]
 154:my_multieffect.cpp **** }
 1125              		.loc 17 154 27 view .LVU298
 1126 0036 1349     		ldr	r1, .L42+24
 153:my_multieffect.cpp ****     mode = (mode % 3 + 3) % 3;
 1127              		.loc 17 153 17 view .LVU299
 1128 0038 2344     		add	r3, r3, r4
 1129              	.LBE462:
 1130              	.LBE461:
 175:my_multieffect.cpp ****     UpdateLeds(k1, k2);
 1131              		.loc 17 175 15 view .LVU300
 1132 003a DDED010A 		vldr.32	s1, [sp, #4]
 1133 003e 9DED000A 		vldr.32	s0, [sp]
 1134              	.LBB466:
 1135              	.LBB465:
 154:my_multieffect.cpp **** }
 1136              		.loc 17 154 18 view .LVU301
 1137 0042 82FB0342 		smull	r4, r2, r2, r3
 1138 0046 A2EBE372 		sub	r2, r2, r3, asr #31
 1139 004a 02EB4202 		add	r2, r2, r2, lsl #1
 1140 004e 9B1A     		subs	r3, r3, r2
 154:my_multieffect.cpp **** }
 1141              		.loc 17 154 22 view .LVU302
 1142 0050 0333     		adds	r3, r3, #3
 154:my_multieffect.cpp **** }
 1143              		.loc 17 154 27 view .LVU303
 1144 0052 A1FB0312 		umull	r1, r2, r1, r3
 1145 0056 22F00101 		bic	r1, r2, #1
 1146 005a 01EB5202 		add	r2, r1, r2, lsr #1
 1147 005e 9B1A     		subs	r3, r3, r2
 154:my_multieffect.cpp **** }
 1148              		.loc 17 154 10 view .LVU304
 1149 0060 0360     		str	r3, [r0]
 1150              	.LBE465:
 1151              	.LBE466:
 1152              		.loc 17 175 5 is_stmt 1 view .LVU305
 1153              		.loc 17 175 15 is_stmt 0 view .LVU306
 1154 0062 FFF7FEFF 		bl	_Z10UpdateLedsff
 1155              	.LVL50:
 176:my_multieffect.cpp **** }
 1156              		.loc 17 176 1 view .LVU307
 1157 0066 02B0     		add	sp, sp, #8
 1158              		.cfi_def_cfa_offset 8
 1159              		@ sp needed
 1160 0068 10BD     		pop	{r4, pc}
 1161              	.L43:
 1162 006a 00BF     		.align	2
 1163              	.L42:
 1164 006c 00000000 		.word	_ZL3pod
 1165 0070 00000000 		.word	.LANCHOR7
 1166 0074 00000000 		.word	.LANCHOR8
 1167 0078 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/cckGrLHt.s 			page 40


 1168 007c 00000000 		.word	.LANCHOR6
 1169 0080 56555555 		.word	1431655766
 1170 0084 ABAAAAAA 		.word	-1431655765
 1171              		.cfi_endproc
 1172              	.LFE4828:
 1174              		.section	.text._Z15GetReverbSampleRfS_ff,"ax",%progbits
 1175              		.align	1
 1176              		.p2align 2,,3
 1177              		.global	_Z15GetReverbSampleRfS_ff
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1182              	_Z15GetReverbSampleRfS_ff:
 1183              	.LVL51:
 1184              	.LFB4829:
 177:my_multieffect.cpp **** 
 178:my_multieffect.cpp **** void GetReverbSample(float &outl, float &outr, float inl, float inr) {
 1185              		.loc 17 178 70 is_stmt 1 view -0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 8
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 179:my_multieffect.cpp ****     rev.Process(inl, inr, &outl, &outr);
 1189              		.loc 17 179 5 view .LVU309
 178:my_multieffect.cpp ****     rev.Process(inl, inr, &outl, &outr);
 1190              		.loc 17 178 70 is_stmt 0 view .LVU310
 1191 0000 30B5     		push	{r4, r5, lr}
 1192              		.cfi_def_cfa_offset 12
 1193              		.cfi_offset 4, -12
 1194              		.cfi_offset 5, -8
 1195              		.cfi_offset 14, -4
 1196 0002 0C46     		mov	r4, r1
 1197 0004 85B0     		sub	sp, sp, #20
 1198              		.cfi_def_cfa_offset 32
 178:my_multieffect.cpp ****     rev.Process(inl, inr, &outl, &outr);
 1199              		.loc 17 178 70 view .LVU311
 1200 0006 0546     		mov	r5, r0
 1201              		.loc 17 179 16 view .LVU312
 1202 0008 1548     		ldr	r0, .L46
 1203              	.LVL52:
 1204              		.loc 17 179 16 view .LVU313
 1205 000a 02AA     		add	r2, sp, #8
 1206 000c 03A9     		add	r1, sp, #12
 1207              	.LVL53:
 1208              		.loc 17 179 16 view .LVU314
 1209 000e 2B46     		mov	r3, r5
 1210 0010 0094     		str	r4, [sp]
 178:my_multieffect.cpp ****     rev.Process(inl, inr, &outl, &outr);
 1211              		.loc 17 178 70 view .LVU315
 1212 0012 8DED030A 		vstr.32	s0, [sp, #12]
 1213 0016 CDED020A 		vstr.32	s1, [sp, #8]
 1214              		.loc 17 179 16 view .LVU316
 1215 001a FFF7FEFF 		bl	_ZN7daisysp8ReverbSc7ProcessERKfS2_PfS3_
 1216              	.LVL54:
 180:my_multieffect.cpp ****     outl = drywet * outl + (1 - drywet) * inl;
 1217              		.loc 17 180 5 is_stmt 1 view .LVU317
 1218              		.loc 17 180 19 is_stmt 0 view .LVU318
 1219 001e 114B     		ldr	r3, .L46+4
ARM GAS  /tmp/cckGrLHt.s 			page 41


 1220              		.loc 17 180 31 view .LVU319
 1221 0020 F7EE007A 		vmov.f32	s15, #1.0e+0
 1222              		.loc 17 180 41 view .LVU320
 1223 0024 9DED035A 		vldr.32	s10, [sp, #12]
 1224              		.loc 17 180 19 view .LVU321
 1225 0028 D3ED006A 		vldr.32	s13, [r3]
 1226              		.loc 17 180 26 view .LVU322
 1227 002c D5ED005A 		vldr.32	s11, [r5]
 1228              		.loc 17 180 31 view .LVU323
 1229 0030 37EEE67A 		vsub.f32	s14, s15, s13
 181:my_multieffect.cpp ****     outr = drywet * outr + (1 - drywet) * inr;
 1230              		.loc 17 181 41 view .LVU324
 1231 0034 9DED026A 		vldr.32	s12, [sp, #8]
 180:my_multieffect.cpp ****     outl = drywet * outl + (1 - drywet) * inl;
 1232              		.loc 17 180 41 view .LVU325
 1233 0038 27EE057A 		vmul.f32	s14, s14, s10
 180:my_multieffect.cpp ****     outl = drywet * outl + (1 - drywet) * inl;
 1234              		.loc 17 180 26 view .LVU326
 1235 003c A5EEA67A 		vfma.f32	s14, s11, s13
 180:my_multieffect.cpp ****     outl = drywet * outl + (1 - drywet) * inl;
 1236              		.loc 17 180 10 view .LVU327
 1237 0040 85ED007A 		vstr.32	s14, [r5]
 1238              		.loc 17 181 5 is_stmt 1 view .LVU328
 1239              		.loc 17 181 19 is_stmt 0 view .LVU329
 1240 0044 93ED007A 		vldr.32	s14, [r3]
 1241              		.loc 17 181 26 view .LVU330
 1242 0048 D4ED006A 		vldr.32	s13, [r4]
 1243              		.loc 17 181 31 view .LVU331
 1244 004c 77EEC77A 		vsub.f32	s15, s15, s14
 1245              		.loc 17 181 41 view .LVU332
 1246 0050 67EE867A 		vmul.f32	s15, s15, s12
 1247              		.loc 17 181 26 view .LVU333
 1248 0054 E6EE877A 		vfma.f32	s15, s13, s14
 1249              		.loc 17 181 10 view .LVU334
 1250 0058 C4ED007A 		vstr.32	s15, [r4]
 182:my_multieffect.cpp **** }
 1251              		.loc 17 182 1 view .LVU335
 1252 005c 05B0     		add	sp, sp, #20
 1253              		.cfi_def_cfa_offset 12
 1254              		@ sp needed
 1255 005e 30BD     		pop	{r4, r5, pc}
 1256              	.LVL55:
 1257              	.L47:
 1258              		.loc 17 182 1 view .LVU336
 1259              		.align	2
 1260              	.L46:
 1261 0060 00000000 		.word	_ZL3rev
 1262 0064 00000000 		.word	.LANCHOR7
 1263              		.cfi_endproc
 1264              	.LFE4829:
 1266              		.section	.text._Z14GetDelaySampleRfS_ff,"ax",%progbits
 1267              		.align	1
 1268              		.p2align 2,,3
 1269              		.global	_Z14GetDelaySampleRfS_ff
 1270              		.syntax unified
 1271              		.thumb
 1272              		.thumb_func
ARM GAS  /tmp/cckGrLHt.s 			page 42


 1274              	_Z14GetDelaySampleRfS_ff:
 1275              	.LVL56:
 1276              	.LFB4830:
 183:my_multieffect.cpp **** 
 184:my_multieffect.cpp **** void GetDelaySample(float &outl, float &outr, float inl, float inr) {
 1277              		.loc 17 184 69 is_stmt 1 view -0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 185:my_multieffect.cpp ****     fonepole(currentDelay, delayTarget, .00007f);
 1281              		.loc 17 185 5 view .LVU338
 1282              	.LBB481:
 1283              	.LBI481:
 1284              		.file 18 "../../DaisySP//Source/Utility/dsp.h"
   1:../../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../../DaisySP//Source/Utility/dsp.h **** */
   3:../../DaisySP//Source/Utility/dsp.h **** #pragma once
   4:../../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../../DaisySP//Source/Utility/dsp.h **** #include <cassert>
   7:../../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
   8:../../DaisySP//Source/Utility/dsp.h **** #include <random>
   9:../../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  10:../../DaisySP//Source/Utility/dsp.h **** 
  11:../../DaisySP//Source/Utility/dsp.h **** /** PIs
  12:../../DaisySP//Source/Utility/dsp.h **** */
  13:../../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../../DaisySP//Source/Utility/dsp.h **** 
  21:../../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  22:../../DaisySP//Source/Utility/dsp.h **** {
  23:../../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../../DaisySP//Source/Utility/dsp.h **** 
  26:../../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../../DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  31:../../DaisySP//Source/Utility/dsp.h **** */
  32:../../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../../DaisySP//Source/Utility/dsp.h **** {
  34:../../DaisySP//Source/Utility/dsp.h ****     float r;
  35:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  36:../../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../../DaisySP//Source/Utility/dsp.h **** #else
  38:../../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  40:../../DaisySP//Source/Utility/dsp.h ****     return r;
  41:../../DaisySP//Source/Utility/dsp.h **** }
  42:../../DaisySP//Source/Utility/dsp.h **** 
  43:../../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
ARM GAS  /tmp/cckGrLHt.s 			page 43


  44:../../DaisySP//Source/Utility/dsp.h **** {
  45:../../DaisySP//Source/Utility/dsp.h ****     float r;
  46:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  47:../../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../../DaisySP//Source/Utility/dsp.h **** #else
  49:../../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  51:../../DaisySP//Source/Utility/dsp.h ****     return r;
  52:../../DaisySP//Source/Utility/dsp.h **** }
  53:../../DaisySP//Source/Utility/dsp.h **** 
  54:../../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  55:../../DaisySP//Source/Utility/dsp.h **** */
  56:../../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../../DaisySP//Source/Utility/dsp.h **** {
  58:../../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../../DaisySP//Source/Utility/dsp.h **** }
  60:../../DaisySP//Source/Utility/dsp.h **** 
  61:../../DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../../DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../../DaisySP//Source/Utility/dsp.h **** These are approximations
  64:../../DaisySP//Source/Utility/dsp.h **** */
  65:../../DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../../DaisySP//Source/Utility/dsp.h **** {
  67:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  68:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  70:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../../DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  74:../../DaisySP//Source/Utility/dsp.h ****     return f;
  75:../../DaisySP//Source/Utility/dsp.h **** }
  76:../../DaisySP//Source/Utility/dsp.h **** 
  77:../../DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../../DaisySP//Source/Utility/dsp.h **** {
  79:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  80:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  82:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../../DaisySP//Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  86:../../DaisySP//Source/Utility/dsp.h ****     return f;
  87:../../DaisySP//Source/Utility/dsp.h **** }
  88:../../DaisySP//Source/Utility/dsp.h **** 
  89:../../DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../../DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../../DaisySP//Source/Utility/dsp.h **** */
  92:../../DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../../DaisySP//Source/Utility/dsp.h **** {
  94:../../DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../../DaisySP//Source/Utility/dsp.h **** }
  96:../../DaisySP//Source/Utility/dsp.h **** 
  97:../../DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../../DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../../DaisySP//Source/Utility/dsp.h **** */
 100:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
ARM GAS  /tmp/cckGrLHt.s 			page 44


 101:../../DaisySP//Source/Utility/dsp.h **** {
 102:../../DaisySP//Source/Utility/dsp.h ****     float frac;
 103:../../DaisySP//Source/Utility/dsp.h ****     int   exp;
 104:../../DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../../DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 107:../../DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 109:../../DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 111:../../DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../../DaisySP//Source/Utility/dsp.h ****     f += exp;
 113:../../DaisySP//Source/Utility/dsp.h ****     return (f);
 114:../../DaisySP//Source/Utility/dsp.h **** }
 115:../../DaisySP//Source/Utility/dsp.h **** 
 116:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../../DaisySP//Source/Utility/dsp.h **** {
 118:../../DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../../DaisySP//Source/Utility/dsp.h **** }
 120:../../DaisySP//Source/Utility/dsp.h **** 
 121:../../DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../../DaisySP//Source/Utility/dsp.h **** */
 123:../../DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 124:../../DaisySP//Source/Utility/dsp.h **** {
 125:../../DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../../DaisySP//Source/Utility/dsp.h **** }
 127:../../DaisySP//Source/Utility/dsp.h **** 
 128:../../DaisySP//Source/Utility/dsp.h **** 
 129:../../DaisySP//Source/Utility/dsp.h **** /** one pole lpf
 130:../../DaisySP//Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../../DaisySP//Source/Utility/dsp.h **** calls to properly filter the signal
 132:../../DaisySP//Source/Utility/dsp.h **** coeff can be calculated:
 133:../../DaisySP//Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../../DaisySP//Source/Utility/dsp.h **** */
 135:../../DaisySP//Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 1285              		.loc 18 135 13 view .LVU339
 1286              	.LBB482:
 136:../../DaisySP//Source/Utility/dsp.h **** {
 137:../../DaisySP//Source/Utility/dsp.h ****     out += coeff * (in - out);
 1287              		.loc 18 137 5 view .LVU340
 1288              		.loc 18 137 9 is_stmt 0 view .LVU341
 1289 0000 534B     		ldr	r3, .L50
 1290              	.LBE482:
 1291              	.LBE481:
 1292              		.loc 17 185 13 view .LVU342
 1293 0002 544A     		ldr	r2, .L50+4
 1294              	.LBB486:
 1295              	.LBB483:
 1296              		.loc 18 137 9 view .LVU343
 1297 0004 D3ED007A 		vldr.32	s15, [r3]
 1298              		.loc 18 137 24 view .LVU344
 1299 0008 92ED007A 		vldr.32	s14, [r2]
 1300              		.loc 18 137 9 view .LVU345
 1301 000c DFED526A 		vldr.32	s13, .L50+8
 1302              		.loc 18 137 24 view .LVU346
 1303 0010 37EE677A 		vsub.f32	s14, s14, s15
 1304              	.LBE483:
ARM GAS  /tmp/cckGrLHt.s 			page 45


 1305              	.LBE486:
 1306              	.LBB487:
 1307              	.LBB488:
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1308              		.loc 16 55 27 view .LVU347
 1309 0014 DFF854C1 		ldr	ip, .L50+28
 1310              	.LBE488:
 1311              	.LBE487:
 184:my_multieffect.cpp ****     fonepole(currentDelay, delayTarget, .00007f);
 1312              		.loc 17 184 69 view .LVU348
 1313 0018 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1314              		.cfi_def_cfa_offset 36
 1315              		.cfi_offset 4, -36
 1316              		.cfi_offset 5, -32
 1317              		.cfi_offset 6, -28
 1318              		.cfi_offset 7, -24
 1319              		.cfi_offset 8, -20
 1320              		.cfi_offset 9, -16
 1321              		.cfi_offset 10, -12
 1322              		.cfi_offset 11, -8
 1323              		.cfi_offset 14, -4
 1324              	.LBB491:
 1325              	.LBB484:
 1326              		.loc 18 137 9 view .LVU349
 1327 001c E7EE267A 		vfma.f32	s15, s14, s13
 1328              	.LBE484:
 1329              	.LBE491:
 1330              	.LBB492:
 1331              	.LBB493:
 1332              		.loc 16 56 60 view .LVU350
 1333 0020 4E4E     		ldr	r6, .L50+12
 1334              	.LBE493:
 1335              	.LBE492:
 1336              	.LBB498:
 1337              	.LBB499:
  57:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
  58:../../DaisySP//Source/Utility/delayline.h ****     }
  59:../../DaisySP//Source/Utility/delayline.h **** 
  60:../../DaisySP//Source/Utility/delayline.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  61:../../DaisySP//Source/Utility/delayline.h ****     */
  62:../../DaisySP//Source/Utility/delayline.h ****     inline void Write(const T sample)
  63:../../DaisySP//Source/Utility/delayline.h ****     {
  64:../../DaisySP//Source/Utility/delayline.h ****         line_[write_ptr_] = sample;
  65:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
  66:../../DaisySP//Source/Utility/delayline.h ****     }
  67:../../DaisySP//Source/Utility/delayline.h **** 
  68:../../DaisySP//Source/Utility/delayline.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
  69:../../DaisySP//Source/Utility/delayline.h ****     */
  70:../../DaisySP//Source/Utility/delayline.h ****     inline const T Read() const
  71:../../DaisySP//Source/Utility/delayline.h ****     {
  72:../../DaisySP//Source/Utility/delayline.h ****         T a = line_[(write_ptr_ + delay_) % max_size];
 1338              		.loc 16 72 22 view .LVU351
 1339 0022 DCF80470 		ldr	r7, [ip, #4]
 1340              	.LBE499:
 1341              	.LBE498:
 186:my_multieffect.cpp ****     delr.SetDelay(currentDelay);
 187:my_multieffect.cpp ****     dell.SetDelay(currentDelay);
ARM GAS  /tmp/cckGrLHt.s 			page 46


 188:my_multieffect.cpp ****     outl = dell.Read();
 189:my_multieffect.cpp ****     outr = delr.Read();
 190:my_multieffect.cpp **** 
 191:my_multieffect.cpp ****     dell.Write((feedback * outl) + inl);
 192:my_multieffect.cpp ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1342              		.loc 17 192 39 view .LVU352
 1343 0026 B7EE007A 		vmov.f32	s14, #1.0e+0
 1344              	.LBB509:
 1345              	.LBB500:
 1346              		.loc 16 72 43 view .LVU353
 1347 002a 4D4C     		ldr	r4, .L50+16
 1348 002c DFF840E1 		ldr	lr, .L50+32
 1349              	.LBE500:
 1350              	.LBE509:
 1351              	.LBB510:
 1352              	.LBB494:
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1353              		.loc 16 55 27 view .LVU354
 1354 0030 4C4D     		ldr	r5, .L50+20
  54:../../DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
 1355              		.loc 16 54 17 view .LVU355
 1356 0032 FDEEE76A 		vcvt.s32.f32	s13, s15
 1357              	.LBE494:
 1358              	.LBE510:
 1359              	.LBB511:
 1360              	.LBB485:
 1361              		.loc 18 137 9 view .LVU356
 1362 0036 C3ED007A 		vstr.32	s15, [r3]
 1363              	.LVL57:
 1364              		.loc 18 137 9 view .LVU357
 1365              	.LBE485:
 1366              	.LBE511:
 186:my_multieffect.cpp ****     delr.SetDelay(currentDelay);
 1367              		.loc 17 186 5 is_stmt 1 view .LVU358
 1368              	.LBB512:
 1369              	.LBI492:
  52:../../DaisySP//Source/Utility/delayline.h ****     {
 1370              		.loc 16 52 17 view .LVU359
  52:../../DaisySP//Source/Utility/delayline.h ****     {
 1371              		.loc 16 52 17 is_stmt 0 view .LVU360
 1372              	.LBE512:
 1373              	.LBB513:
 1374              	.LBB514:
 1375              		.loc 16 72 22 view .LVU361
 1376 003a D5F80490 		ldr	r9, [r5, #4]
 1377              	.LBE514:
 1378              	.LBE513:
 1379              	.LBB524:
 1380              	.LBB495:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1381              		.loc 16 56 60 view .LVU362
 1382 003e 16EE903A 		vmov	r3, s13	@ int
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1383              		.loc 16 55 37 view .LVU363
 1384 0042 F8EEE66A 		vcvt.f32.s32	s13, s13
 1385              	.LVL58:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
ARM GAS  /tmp/cckGrLHt.s 			page 47


 1386              		.loc 16 56 60 view .LVU364
 1387 0046 B342     		cmp	r3, r6
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1388              		.loc 16 55 35 view .LVU365
 1389 0048 77EEE67A 		vsub.f32	s15, s15, s13
 1390              	.LVL59:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1391              		.loc 16 56 60 view .LVU366
 1392 004c 28BF     		it	cs
 1393 004e 3346     		movcs	r3, r6
 1394              	.LVL60:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1395              		.loc 16 56 60 view .LVU367
 1396              	.LBE495:
 1397              	.LBE524:
 1398              	.LBB525:
 1399              	.LBB501:
 1400              		.loc 16 72 33 view .LVU368
 1401 0050 DA19     		adds	r2, r3, r7
 1402              	.LBE501:
 1403              	.LBE525:
 1404              	.LBB526:
 1405              	.LBB496:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1406              		.loc 16 56 16 view .LVU369
 1407 0052 AB60     		str	r3, [r5, #8]
 1408              	.LVL61:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1409              		.loc 16 56 16 view .LVU370
 1410              	.LBE496:
 1411              	.LBE526:
 187:my_multieffect.cpp ****     outl = dell.Read();
 1412              		.loc 17 187 5 is_stmt 1 view .LVU371
 1413              	.LBB527:
 1414              	.LBI487:
  52:../../DaisySP//Source/Utility/delayline.h ****     {
 1415              		.loc 16 52 17 view .LVU372
 1416              	.LBB489:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1417              		.loc 16 56 16 is_stmt 0 view .LVU373
 1418 0054 CCF80830 		str	r3, [ip, #8]
 1419              	.LVL62:
  56:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 1420              		.loc 16 56 16 view .LVU374
 1421              	.LBE489:
 1422              	.LBE527:
 188:my_multieffect.cpp ****     outr = delr.Read();
 1423              		.loc 17 188 5 is_stmt 1 view .LVU375
 1424              	.LBB528:
 1425              	.LBI498:
  70:../../DaisySP//Source/Utility/delayline.h ****     {
 1426              		.loc 16 70 20 view .LVU376
 1427              	.LBE528:
 1428              	.LBB529:
 1429              	.LBB515:
 1430              		.loc 16 72 33 is_stmt 0 view .LVU377
 1431 0058 4B44     		add	r3, r3, r9
ARM GAS  /tmp/cckGrLHt.s 			page 48


 1432              	.LBE515:
 1433              	.LBE529:
 1434              	.LBB530:
 1435              	.LBB502:
 1436              		.loc 16 72 43 view .LVU378
 1437 005a A4FB028B 		umull	r8, fp, r4, r2
  73:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1438              		.loc 16 73 42 view .LVU379
 1439 005e 02F1010A 		add	r10, r2, #1
 1440              	.LBE502:
 1441              	.LBE530:
 1442              	.LBB531:
 1443              	.LBB497:
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1444              		.loc 16 55 27 view .LVU380
 1445 0062 C5ED007A 		vstr.32	s15, [r5]
 1446              	.LBE497:
 1447              	.LBE531:
 1448              	.LBB532:
 1449              	.LBB503:
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1450              		.loc 16 72 43 view .LVU381
 1451 0066 4FEADB3B 		lsr	fp, fp, #15
 1452              	.LBE503:
 1453              	.LBE532:
 1454              	.LBB533:
 1455              	.LBB490:
  55:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1456              		.loc 16 55 27 view .LVU382
 1457 006a CCED007A 		vstr.32	s15, [ip]
 1458              	.LBE490:
 1459              	.LBE533:
 1460              	.LBB534:
 1461              	.LBB504:
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1462              		.loc 16 72 43 view .LVU383
 1463 006e 0EFB1B22 		mls	r2, lr, fp, r2
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1464              		.loc 16 72 11 view .LVU384
 1465 0072 0CEB8202 		add	r2, ip, r2, lsl #2
 1466 0076 D2ED036A 		vldr.32	s13, [r2, #12]
 1467              	.LVL63:
 1468              		.loc 16 73 47 view .LVU385
 1469 007a A4FB0A82 		umull	r8, r2, r4, r10
 1470 007e D20B     		lsrs	r2, r2, #15
 1471 0080 0EFB12AA 		mls	r10, lr, r2, r10
 1472              	.LVL64:
 1473              		.loc 16 73 47 view .LVU386
 1474              	.LBE504:
 1475              	.LBE534:
 1476              	.LBB535:
 1477              	.LBB516:
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1478              		.loc 16 72 43 view .LVU387
 1479 0084 A4FB0382 		umull	r8, r2, r4, r3
 1480              	.LBE516:
 1481              	.LBE535:
ARM GAS  /tmp/cckGrLHt.s 			page 49


 1482              	.LBB536:
 1483              	.LBB505:
 1484              		.loc 16 73 11 view .LVU388
 1485 0088 0CEB8A0A 		add	r10, ip, r10, lsl #2
 1486              	.LBE505:
 1487              	.LBE536:
 1488              	.LBB537:
 1489              	.LBB517:
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1490              		.loc 16 72 43 view .LVU389
 1491 008c D20B     		lsrs	r2, r2, #15
 1492              	.LBE517:
 1493              	.LBE537:
 1494              	.LBB538:
 1495              	.LBB506:
  74:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1496              		.loc 16 74 23 view .LVU390
 1497 008e 9AED036A 		vldr.32	s12, [r10, #12]
 1498              	.LBE506:
 1499              	.LBE538:
 1500              	.LBB539:
 1501              	.LBB518:
  73:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1502              		.loc 16 73 42 view .LVU391
 1503 0092 03F1010A 		add	r10, r3, #1
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1504              		.loc 16 72 43 view .LVU392
 1505 0096 0EFB1232 		mls	r2, lr, r2, r3
 1506              	.LBE518:
 1507              	.LBE539:
 1508              	.LBB540:
 1509              	.LBB507:
 1510              		.loc 16 74 23 view .LVU393
 1511 009a 36EE666A 		vsub.f32	s12, s12, s13
 1512              	.LBE507:
 1513              	.LBE540:
 1514              	.LBB541:
 1515              	.LBB519:
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1516              		.loc 16 72 11 view .LVU394
 1517 009e 05EB8202 		add	r2, r5, r2, lsl #2
 1518              	.LBE519:
 1519              	.LBE541:
 1520              	.LBB542:
 1521              	.LBB508:
 1522              		.loc 16 74 30 view .LVU395
 1523 00a2 E7EE866A 		vfma.f32	s13, s15, s12
 1524              	.LVL65:
 1525              		.loc 16 74 30 view .LVU396
 1526              	.LBE508:
 1527              	.LBE542:
 188:my_multieffect.cpp ****     outr = delr.Read();
 1528              		.loc 17 188 10 view .LVU397
 1529 00a6 C0ED006A 		vstr.32	s13, [r0]
 189:my_multieffect.cpp **** 
 1530              		.loc 17 189 5 is_stmt 1 view .LVU398
 1531              	.LVL66:
ARM GAS  /tmp/cckGrLHt.s 			page 50


 1532              	.LBB543:
 1533              	.LBI513:
  70:../../DaisySP//Source/Utility/delayline.h ****     {
 1534              		.loc 16 70 20 view .LVU399
 1535              	.LBB520:
  72:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 1536              		.loc 16 72 11 is_stmt 0 view .LVU400
 1537 00aa D2ED037A 		vldr.32	s15, [r2, #12]
 1538              	.LVL67:
  73:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1539              		.loc 16 73 47 view .LVU401
 1540 00ae A4FB0A23 		umull	r2, r3, r4, r10
 1541              	.LVL68:
 1542              		.loc 16 74 30 view .LVU402
 1543 00b2 95ED006A 		vldr.32	s12, [r5]
  73:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1544              		.loc 16 73 47 view .LVU403
 1545 00b6 DB0B     		lsrs	r3, r3, #15
 1546              	.LBE520:
 1547              	.LBE543:
 191:my_multieffect.cpp ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1548              		.loc 17 191 26 view .LVU404
 1549 00b8 2B4A     		ldr	r2, .L50+24
 1550              	.LBB544:
 1551              	.LBB521:
  73:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1552              		.loc 16 73 47 view .LVU405
 1553 00ba 0EFB13AA 		mls	r10, lr, r3, r10
 1554              	.LVL69:
  73:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1555              		.loc 16 73 47 view .LVU406
 1556              	.LBE521:
 1557              	.LBE544:
 1558              	.LBB545:
 1559              	.LBB546:
  64:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1560              		.loc 16 64 27 view .LVU407
 1561 00be 0CEB8703 		add	r3, ip, r7, lsl #2
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1562              		.loc 16 65 45 view .LVU408
 1563 00c2 3744     		add	r7, r7, r6
 1564              	.LBE546:
 1565              	.LBE545:
 1566              	.LBB552:
 1567              	.LBB553:
 1568 00c4 4E44     		add	r6, r6, r9
 1569              	.LBE553:
 1570              	.LBE552:
 1571              	.LBB560:
 1572              	.LBB522:
  73:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 1573              		.loc 16 73 11 view .LVU409
 1574 00c6 05EB8A0A 		add	r10, r5, r10, lsl #2
 1575              	.LBE522:
 1576              	.LBE560:
 1577              	.LBB561:
 1578              	.LBB554:
ARM GAS  /tmp/cckGrLHt.s 			page 51


  64:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1579              		.loc 16 64 27 view .LVU410
 1580 00ca 05EB8909 		add	r9, r5, r9, lsl #2
 1581              	.LVL70:
  64:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1582              		.loc 16 64 27 view .LVU411
 1583              	.LBE554:
 1584              	.LBE561:
 1585              	.LBB562:
 1586              	.LBB523:
 1587              		.loc 16 74 23 view .LVU412
 1588 00ce DAED036A 		vldr.32	s13, [r10, #12]
 1589 00d2 76EEE76A 		vsub.f32	s13, s13, s15
 1590              		.loc 16 74 30 view .LVU413
 1591 00d6 E6EE867A 		vfma.f32	s15, s13, s12
 1592              	.LVL71:
 1593              		.loc 16 74 30 view .LVU414
 1594              	.LBE523:
 1595              	.LBE562:
 191:my_multieffect.cpp ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1596              		.loc 17 191 15 view .LVU415
 1597 00da B0EE406A 		vmov.f32	s12, s0
 189:my_multieffect.cpp **** 
 1598              		.loc 17 189 10 view .LVU416
 1599 00de C1ED007A 		vstr.32	s15, [r1]
 191:my_multieffect.cpp ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1600              		.loc 17 191 5 is_stmt 1 view .LVU417
 191:my_multieffect.cpp ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1601              		.loc 17 191 15 is_stmt 0 view .LVU418
 1602 00e2 D0ED007A 		vldr.32	s15, [r0]
 191:my_multieffect.cpp ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1603              		.loc 17 191 26 view .LVU419
 1604 00e6 D2ED006A 		vldr.32	s13, [r2]
 191:my_multieffect.cpp ****     outl = (feedback * outl) + ((1.0f - feedback) * inl);
 1605              		.loc 17 191 15 view .LVU420
 1606 00ea A7EEA66A 		vfma.f32	s12, s15, s13
 1607              	.LVL72:
 1608              	.LBB563:
 1609              	.LBI545:
  62:../../DaisySP//Source/Utility/delayline.h ****     {
 1610              		.loc 16 62 17 is_stmt 1 view .LVU421
 1611              	.LBE563:
 1612              		.loc 17 192 39 is_stmt 0 view .LVU422
 1613 00ee 77EE667A 		vsub.f32	s15, s14, s13
 1614              		.loc 17 192 51 view .LVU423
 1615 00f2 27EE800A 		vmul.f32	s0, s15, s0
 1616              	.LVL73:
 1617              	.LBB564:
 1618              	.LBB547:
  64:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1619              		.loc 16 64 27 view .LVU424
 1620 00f6 83ED036A 		vstr.32	s12, [r3, #12]
 1621              	.LBE547:
 1622              	.LBE564:
 193:my_multieffect.cpp **** 
 194:my_multieffect.cpp ****     delr.Write((feedback * outr) + inr);
 1623              		.loc 17 194 15 view .LVU425
ARM GAS  /tmp/cckGrLHt.s 			page 52


 1624 00fa B0EE606A 		vmov.f32	s12, s1
 1625              	.LVL74:
 192:my_multieffect.cpp **** 
 1626              		.loc 17 192 30 view .LVU426
 1627 00fe D0ED007A 		vldr.32	s15, [r0]
 1628              	.LBB565:
 1629              	.LBB548:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1630              		.loc 16 65 57 view .LVU427
 1631 0102 A4FB0732 		umull	r3, r2, r4, r7
 1632              	.LVL75:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1633              		.loc 16 65 57 view .LVU428
 1634              	.LBE548:
 1635              	.LBE565:
 1636              	.LBB566:
 1637              	.LBB555:
 1638 0106 A4FB0643 		umull	r4, r3, r4, r6
 1639              	.LBE555:
 1640              	.LBE566:
 192:my_multieffect.cpp **** 
 1641              		.loc 17 192 30 view .LVU429
 1642 010a A6EEA70A 		vfma.f32	s0, s13, s15
 1643              	.LBB567:
 1644              	.LBB549:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1645              		.loc 16 65 57 view .LVU430
 1646 010e D20B     		lsrs	r2, r2, #15
 1647              	.LBE549:
 1648              	.LBE567:
 1649              	.LBB568:
 1650              	.LBB556:
 1651 0110 DB0B     		lsrs	r3, r3, #15
 1652              	.LBE556:
 1653              	.LBE568:
 1654              	.LBB569:
 1655              	.LBB550:
 1656 0112 0EFB1277 		mls	r7, lr, r2, r7
 1657              	.LVL76:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1658              		.loc 16 65 57 view .LVU431
 1659              	.LBE550:
 1660              	.LBE569:
 1661              		.loc 17 194 26 view .LVU432
 1662 0116 144A     		ldr	r2, .L50+24
 1663              	.LBB570:
 1664              	.LBB557:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1665              		.loc 16 65 57 view .LVU433
 1666 0118 0EFB1366 		mls	r6, lr, r3, r6
 1667              	.LBE557:
 1668              	.LBE570:
 1669              	.LBB571:
 1670              	.LBB551:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1671              		.loc 16 65 27 view .LVU434
 1672 011c CCF80470 		str	r7, [ip, #4]
ARM GAS  /tmp/cckGrLHt.s 			page 53


 1673              	.LVL77:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1674              		.loc 16 65 27 view .LVU435
 1675              	.LBE551:
 1676              	.LBE571:
 192:my_multieffect.cpp **** 
 1677              		.loc 17 192 5 is_stmt 1 view .LVU436
 192:my_multieffect.cpp **** 
 1678              		.loc 17 192 10 is_stmt 0 view .LVU437
 1679 0120 80ED000A 		vstr.32	s0, [r0]
 1680              		.loc 17 194 5 is_stmt 1 view .LVU438
 1681              		.loc 17 194 26 is_stmt 0 view .LVU439
 1682 0124 D2ED006A 		vldr.32	s13, [r2]
 1683              		.loc 17 194 15 view .LVU440
 1684 0128 D1ED005A 		vldr.32	s11, [r1]
 195:my_multieffect.cpp ****     outr = (feedback * outr) + ((1.0f - feedback) * inr);
 1685              		.loc 17 195 39 view .LVU441
 1686 012c 77EE667A 		vsub.f32	s15, s14, s13
 1687              	.LBB572:
 1688              	.LBB558:
  65:../../DaisySP//Source/Utility/delayline.h ****     }
 1689              		.loc 16 65 27 view .LVU442
 1690 0130 6E60     		str	r6, [r5, #4]
 1691              	.LBE558:
 1692              	.LBE572:
 194:my_multieffect.cpp ****     outr = (feedback * outr) + ((1.0f - feedback) * inr);
 1693              		.loc 17 194 15 view .LVU443
 1694 0132 A5EEA66A 		vfma.f32	s12, s11, s13
 1695              	.LVL78:
 1696              	.LBB573:
 1697              	.LBI552:
  62:../../DaisySP//Source/Utility/delayline.h ****     {
 1698              		.loc 16 62 17 is_stmt 1 view .LVU444
  62:../../DaisySP//Source/Utility/delayline.h ****     {
 1699              		.loc 16 62 17 is_stmt 0 view .LVU445
 1700              	.LBE573:
 1701              		.loc 17 195 5 is_stmt 1 view .LVU446
 1702              		.loc 17 195 51 is_stmt 0 view .LVU447
 1703 0136 27EEA07A 		vmul.f32	s14, s15, s1
 1704              	.LBB574:
 1705              	.LBB559:
  64:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 1706              		.loc 16 64 27 view .LVU448
 1707 013a 89ED036A 		vstr.32	s12, [r9, #12]
 1708              	.LBE559:
 1709              	.LBE574:
 1710              		.loc 17 195 30 view .LVU449
 1711 013e D1ED007A 		vldr.32	s15, [r1]
 1712 0142 A6EEA77A 		vfma.f32	s14, s13, s15
 1713              		.loc 17 195 10 view .LVU450
 1714 0146 81ED007A 		vstr.32	s14, [r1]
 196:my_multieffect.cpp **** }
 1715              		.loc 17 196 1 view .LVU451
 1716 014a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1717              	.L51:
 1718 014e 00BF     		.align	2
 1719              	.L50:
ARM GAS  /tmp/cckGrLHt.s 			page 54


 1720 0150 00000000 		.word	.LANCHOR5
 1721 0154 00000000 		.word	.LANCHOR4
 1722 0158 F7CC9238 		.word	949144823
 1723 015c BFD40100 		.word	119999
 1724 0160 73B2E745 		.word	1172812403
 1725 0164 00000000 		.word	_ZL4delr
 1726 0168 00000000 		.word	.LANCHOR8
 1727 016c 0C530700 		.word	_ZL4dell
 1728 0170 C0D40100 		.word	120000
 1729              		.cfi_endproc
 1730              	.LFE4830:
 1732              		.section	.text._Z14GetCrushSampleRfS_ff,"ax",%progbits
 1733              		.align	1
 1734              		.p2align 2,,3
 1735              		.global	_Z14GetCrushSampleRfS_ff
 1736              		.syntax unified
 1737              		.thumb
 1738              		.thumb_func
 1740              	_Z14GetCrushSampleRfS_ff:
 1741              	.LVL79:
 1742              	.LFB4831:
 197:my_multieffect.cpp **** 
 198:my_multieffect.cpp **** void GetCrushSample(float &outl, float &outr, float inl, float inr) {
 1743              		.loc 17 198 69 is_stmt 1 view -0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
 199:my_multieffect.cpp ****     crushcount++;
 1747              		.loc 17 199 5 view .LVU453
 200:my_multieffect.cpp ****     crushcount %= crushmod;
 1748              		.loc 17 200 5 view .LVU454
 199:my_multieffect.cpp ****     crushcount++;
 1749              		.loc 17 199 15 is_stmt 0 view .LVU455
 1750 0000 124A     		ldr	r2, .L56
 198:my_multieffect.cpp ****     crushcount++;
 1751              		.loc 17 198 69 view .LVU456
 1752 0002 70B5     		push	{r4, r5, r6, lr}
 1753              		.cfi_def_cfa_offset 16
 1754              		.cfi_offset 4, -16
 1755              		.cfi_offset 5, -12
 1756              		.cfi_offset 6, -8
 1757              		.cfi_offset 14, -4
 199:my_multieffect.cpp ****     crushcount++;
 1758              		.loc 17 199 15 view .LVU457
 1759 0004 1368     		ldr	r3, [r2]
 198:my_multieffect.cpp ****     crushcount++;
 1760              		.loc 17 198 69 view .LVU458
 1761 0006 0546     		mov	r5, r0
 1762              		.loc 17 200 16 view .LVU459
 1763 0008 114C     		ldr	r4, .L56+4
 199:my_multieffect.cpp ****     crushcount++;
 1764              		.loc 17 199 15 view .LVU460
 1765 000a 0133     		adds	r3, r3, #1
 1766              		.loc 17 200 16 view .LVU461
 1767 000c 2668     		ldr	r6, [r4]
 198:my_multieffect.cpp ****     crushcount++;
 1768              		.loc 17 198 69 view .LVU462
ARM GAS  /tmp/cckGrLHt.s 			page 55


 1769 000e 0C46     		mov	r4, r1
 1770              		.loc 17 200 16 view .LVU463
 1771 0010 93FBF6F1 		sdiv	r1, r3, r6
 1772              	.LVL80:
 1773              		.loc 17 200 16 view .LVU464
 1774 0014 06FB1133 		mls	r3, r6, r1, r3
 1775 0018 1360     		str	r3, [r2]
 201:my_multieffect.cpp **** 
 202:my_multieffect.cpp ****     if(crushcount == 0) {
 1776              		.loc 17 202 5 is_stmt 1 view .LVU465
 1777 001a 83B1     		cbz	r3, .L53
 203:my_multieffect.cpp ****         crushsr = inr;
 204:my_multieffect.cpp ****         crushsl = inl;
 205:my_multieffect.cpp ****     }
 206:my_multieffect.cpp **** 
 207:my_multieffect.cpp ****     outl = tone.Process(crushsl);
 1778              		.loc 17 207 24 is_stmt 0 view .LVU466
 1779 001c 0D4B     		ldr	r3, .L56+8
 1780 001e 0E4E     		ldr	r6, .L56+12
 1781 0020 93ED000A 		vldr.32	s0, [r3]
 1782              	.LVL81:
 1783              	.L54:
 1784              		.loc 17 207 5 is_stmt 1 view .LVU467
 1785              		.loc 17 207 24 is_stmt 0 view .LVU468
 1786 0024 0D48     		ldr	r0, .L56+16
 1787              	.LVL82:
 1788              		.loc 17 207 24 view .LVU469
 1789 0026 FFF7FEFF 		bl	_ZN7daisysp4Tone7ProcessEf
 1790              	.LVL83:
 208:my_multieffect.cpp ****     outr = tone.Process(crushsr);
 1791              		.loc 17 208 24 view .LVU470
 1792 002a 0C48     		ldr	r0, .L56+16
 207:my_multieffect.cpp ****     outr = tone.Process(crushsr);
 1793              		.loc 17 207 10 view .LVU471
 1794 002c 85ED000A 		vstr.32	s0, [r5]
 1795              		.loc 17 208 5 is_stmt 1 view .LVU472
 1796              		.loc 17 208 24 is_stmt 0 view .LVU473
 1797 0030 96ED000A 		vldr.32	s0, [r6]
 1798 0034 FFF7FEFF 		bl	_ZN7daisysp4Tone7ProcessEf
 1799              	.LVL84:
 1800              		.loc 17 208 10 view .LVU474
 1801 0038 84ED000A 		vstr.32	s0, [r4]
 209:my_multieffect.cpp **** }
 1802              		.loc 17 209 1 view .LVU475
 1803 003c 70BD     		pop	{r4, r5, r6, pc}
 1804              	.LVL85:
 1805              	.L53:
 203:my_multieffect.cpp ****         crushsl = inl;
 1806              		.loc 17 203 9 is_stmt 1 view .LVU476
 203:my_multieffect.cpp ****         crushsl = inl;
 1807              		.loc 17 203 17 is_stmt 0 view .LVU477
 1808 003e 064E     		ldr	r6, .L56+12
 204:my_multieffect.cpp ****     }
 1809              		.loc 17 204 17 view .LVU478
 1810 0040 044B     		ldr	r3, .L56+8
 203:my_multieffect.cpp ****         crushsl = inl;
 1811              		.loc 17 203 17 view .LVU479
ARM GAS  /tmp/cckGrLHt.s 			page 56


 1812 0042 C6ED000A 		vstr.32	s1, [r6]
 204:my_multieffect.cpp ****     }
 1813              		.loc 17 204 9 is_stmt 1 view .LVU480
 204:my_multieffect.cpp ****     }
 1814              		.loc 17 204 17 is_stmt 0 view .LVU481
 1815 0046 83ED000A 		vstr.32	s0, [r3]
 1816 004a EBE7     		b	.L54
 1817              	.L57:
 1818              		.align	2
 1819              	.L56:
 1820 004c 00000000 		.word	.LANCHOR11
 1821 0050 00000000 		.word	.LANCHOR10
 1822 0054 00000000 		.word	.LANCHOR12
 1823 0058 00000000 		.word	.LANCHOR13
 1824 005c 00000000 		.word	.LANCHOR0
 1825              		.cfi_endproc
 1826              	.LFE4831:
 1828              		.section	.text._Z13AudioCallbackPKfPfj,"ax",%progbits
 1829              		.align	1
 1830              		.p2align 2,,3
 1831              		.global	_Z13AudioCallbackPKfPfj
 1832              		.syntax unified
 1833              		.thumb
 1834              		.thumb_func
 1836              	_Z13AudioCallbackPKfPfj:
 1837              	.LVL86:
 1838              	.LFB4823:
  61:my_multieffect.cpp **** 
 1839              		.loc 17 61 64 is_stmt 1 view -0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 8
 1842              		@ frame_needed = 0, uses_anonymous_args = 0
  63:my_multieffect.cpp **** 
 1843              		.loc 17 63 5 view .LVU483
  65:my_multieffect.cpp **** 
 1844              		.loc 17 65 5 view .LVU484
  61:my_multieffect.cpp **** 
 1845              		.loc 17 61 64 is_stmt 0 view .LVU485
 1846 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1847              		.cfi_def_cfa_offset 24
 1848              		.cfi_offset 4, -24
 1849              		.cfi_offset 5, -20
 1850              		.cfi_offset 6, -16
 1851              		.cfi_offset 7, -12
 1852              		.cfi_offset 8, -8
 1853              		.cfi_offset 14, -4
 1854 0004 1746     		mov	r7, r2
 1855 0006 82B0     		sub	sp, sp, #8
 1856              		.cfi_def_cfa_offset 32
  61:my_multieffect.cpp **** 
 1857              		.loc 17 61 64 view .LVU486
 1858 0008 0546     		mov	r5, r0
 1859 000a 0C46     		mov	r4, r1
  65:my_multieffect.cpp **** 
 1860              		.loc 17 65 13 view .LVU487
 1861 000c FFF7FEFF 		bl	_Z8Controlsv
 1862              	.LVL87:
ARM GAS  /tmp/cckGrLHt.s 			page 57


  68:my_multieffect.cpp ****         inl = in[i];
 1863              		.loc 17 68 5 is_stmt 1 view .LVU488
 1864              	.LBB575:
  68:my_multieffect.cpp ****         inl = in[i];
 1865              		.loc 17 68 25 view .LVU489
 1866 0010 002F     		cmp	r7, #0
 1867 0012 33D0     		beq	.L58
 1868 0014 013F     		subs	r7, r7, #1
 1869              	.LVL88:
  68:my_multieffect.cpp ****         inl = in[i];
 1870              		.loc 17 68 25 is_stmt 0 view .LVU490
 1871 0016 0026     		movs	r6, #0
 1872 0018 DFF86880 		ldr	r8, .L69
 1873 001c 7F08     		lsrs	r7, r7, #1
 1874              	.LVL89:
  68:my_multieffect.cpp ****         inl = in[i];
 1875              		.loc 17 68 25 view .LVU491
 1876 001e 0CE0     		b	.L65
 1877              	.LVL90:
 1878              	.L68:
  72:my_multieffect.cpp ****             case REV:
 1879              		.loc 17 72 9 view .LVU492
 1880 0020 2BB3     		cbz	r3, .L67
  85:my_multieffect.cpp ****         }
 1881              		.loc 17 85 34 view .LVU493
 1882 0022 0191     		str	r1, [sp, #4]	@ float
  85:my_multieffect.cpp ****         }
 1883              		.loc 17 85 27 view .LVU494
 1884 0024 0091     		str	r1, [sp]	@ float
 1885              	.LVL91:
 1886              	.L63:
  89:my_multieffect.cpp **** 
 1887              		.loc 17 89 9 is_stmt 1 discriminator 2 view .LVU495
  68:my_multieffect.cpp ****         inl = in[i];
 1888              		.loc 17 68 25 is_stmt 0 discriminator 2 view .LVU496
 1889 0026 731C     		adds	r3, r6, #1
 1890 0028 BE42     		cmp	r6, r7
  89:my_multieffect.cpp **** 
 1891              		.loc 17 89 16 discriminator 2 view .LVU497
 1892 002a 2160     		str	r1, [r4]	@ float
  92:my_multieffect.cpp ****     }
 1893              		.loc 17 92 9 is_stmt 1 discriminator 2 view .LVU498
  68:my_multieffect.cpp ****         inl = in[i];
 1894              		.loc 17 68 25 is_stmt 0 discriminator 2 view .LVU499
 1895 002c 05F10805 		add	r5, r5, #8
  92:my_multieffect.cpp ****     }
 1896              		.loc 17 92 20 discriminator 2 view .LVU500
 1897 0030 6260     		str	r2, [r4, #4]	@ float
  68:my_multieffect.cpp ****         inl = in[i];
 1898              		.loc 17 68 5 is_stmt 1 discriminator 2 view .LVU501
 1899              	.LVL92:
  68:my_multieffect.cpp ****         inl = in[i];
 1900              		.loc 17 68 25 discriminator 2 view .LVU502
 1901 0032 1E46     		mov	r6, r3
 1902              	.LVL93:
  68:my_multieffect.cpp ****         inl = in[i];
 1903              		.loc 17 68 25 is_stmt 0 discriminator 2 view .LVU503
ARM GAS  /tmp/cckGrLHt.s 			page 58


 1904 0034 04F10804 		add	r4, r4, #8
 1905 0038 20D0     		beq	.L58
 1906              	.LVL94:
 1907              	.L65:
  69:my_multieffect.cpp ****         inr = in[i + 1];
 1908              		.loc 17 69 9 is_stmt 1 view .LVU504
  72:my_multieffect.cpp ****             case REV:
 1909              		.loc 17 72 9 is_stmt 0 view .LVU505
 1910 003a D8F80030 		ldr	r3, [r8]
  69:my_multieffect.cpp ****         inr = in[i + 1];
 1911              		.loc 17 69 13 view .LVU506
 1912 003e 95ED000A 		vldr.32	s0, [r5]
 1913              	.LVL95:
  70:my_multieffect.cpp **** 
 1914              		.loc 17 70 9 is_stmt 1 view .LVU507
  72:my_multieffect.cpp ****             case REV:
 1915              		.loc 17 72 9 is_stmt 0 view .LVU508
 1916 0042 012B     		cmp	r3, #1
  70:my_multieffect.cpp **** 
 1917              		.loc 17 70 13 view .LVU509
 1918 0044 D5ED010A 		vldr.32	s1, [r5, #4]
 1919              	.LVL96:
  72:my_multieffect.cpp ****             case REV:
 1920              		.loc 17 72 9 is_stmt 1 view .LVU510
 1921 0048 0AD0     		beq	.L60
  85:my_multieffect.cpp ****         }
 1922              		.loc 17 85 13 view .LVU511
  85:my_multieffect.cpp ****         }
 1923              		.loc 17 85 22 view .LVU512
  85:my_multieffect.cpp ****         }
 1924              		.loc 17 85 34 is_stmt 0 view .LVU513
 1925 004a 0021     		movs	r1, #0
  72:my_multieffect.cpp ****             case REV:
 1926              		.loc 17 72 9 view .LVU514
 1927 004c 022B     		cmp	r3, #2
  85:my_multieffect.cpp ****         }
 1928              		.loc 17 85 27 view .LVU515
 1929 004e 0A46     		mov	r2, r1	@ float
  72:my_multieffect.cpp ****             case REV:
 1930              		.loc 17 72 9 view .LVU516
 1931 0050 E6D1     		bne	.L68
  81:my_multieffect.cpp ****                 GetCrushSample(outl, outr, inl, inr);
 1932              		.loc 17 81 13 is_stmt 1 view .LVU517
  82:my_multieffect.cpp ****             break;
 1933              		.loc 17 82 17 view .LVU518
  82:my_multieffect.cpp ****             break;
 1934              		.loc 17 82 31 is_stmt 0 view .LVU519
 1935 0052 01A9     		add	r1, sp, #4
 1936 0054 6846     		mov	r0, sp
 1937 0056 FFF7FEFF 		bl	_Z14GetCrushSampleRfS_ff
 1938              	.LVL97:
  83:my_multieffect.cpp **** 
 1939              		.loc 17 83 13 is_stmt 1 view .LVU520
  89:my_multieffect.cpp **** 
 1940              		.loc 17 89 16 is_stmt 0 view .LVU521
 1941 005a 0099     		ldr	r1, [sp]	@ float
  92:my_multieffect.cpp ****     }
ARM GAS  /tmp/cckGrLHt.s 			page 59


 1942              		.loc 17 92 20 view .LVU522
 1943 005c 019A     		ldr	r2, [sp, #4]	@ float
  83:my_multieffect.cpp **** 
 1944              		.loc 17 83 13 view .LVU523
 1945 005e E2E7     		b	.L63
 1946              	.LVL98:
 1947              	.L60:
  77:my_multieffect.cpp ****                 GetDelaySample(outl, outr, inl, inr);
 1948              		.loc 17 77 13 is_stmt 1 view .LVU524
  78:my_multieffect.cpp ****             break;
 1949              		.loc 17 78 17 view .LVU525
  78:my_multieffect.cpp ****             break;
 1950              		.loc 17 78 31 is_stmt 0 view .LVU526
 1951 0060 01A9     		add	r1, sp, #4
 1952 0062 6846     		mov	r0, sp
 1953 0064 FFF7FEFF 		bl	_Z14GetDelaySampleRfS_ff
 1954              	.LVL99:
  79:my_multieffect.cpp **** 
 1955              		.loc 17 79 13 is_stmt 1 view .LVU527
  89:my_multieffect.cpp **** 
 1956              		.loc 17 89 16 is_stmt 0 view .LVU528
 1957 0068 0099     		ldr	r1, [sp]	@ float
  92:my_multieffect.cpp ****     }
 1958              		.loc 17 92 20 view .LVU529
 1959 006a 019A     		ldr	r2, [sp, #4]	@ float
  79:my_multieffect.cpp **** 
 1960              		.loc 17 79 13 view .LVU530
 1961 006c DBE7     		b	.L63
 1962              	.LVL100:
 1963              	.L67:
  73:my_multieffect.cpp ****                 GetReverbSample(outl, outr, inl, inr);
 1964              		.loc 17 73 13 is_stmt 1 view .LVU531
  74:my_multieffect.cpp ****             break;
 1965              		.loc 17 74 17 view .LVU532
  74:my_multieffect.cpp ****             break;
 1966              		.loc 17 74 32 is_stmt 0 view .LVU533
 1967 006e 01A9     		add	r1, sp, #4
 1968 0070 6846     		mov	r0, sp
 1969 0072 FFF7FEFF 		bl	_Z15GetReverbSampleRfS_ff
 1970              	.LVL101:
  75:my_multieffect.cpp **** 
 1971              		.loc 17 75 13 is_stmt 1 view .LVU534
  89:my_multieffect.cpp **** 
 1972              		.loc 17 89 16 is_stmt 0 view .LVU535
 1973 0076 0099     		ldr	r1, [sp]	@ float
  92:my_multieffect.cpp ****     }
 1974              		.loc 17 92 20 view .LVU536
 1975 0078 019A     		ldr	r2, [sp, #4]	@ float
  75:my_multieffect.cpp **** 
 1976              		.loc 17 75 13 view .LVU537
 1977 007a D4E7     		b	.L63
 1978              	.LVL102:
 1979              	.L58:
  75:my_multieffect.cpp **** 
 1980              		.loc 17 75 13 view .LVU538
 1981              	.LBE575:
  94:my_multieffect.cpp **** 
ARM GAS  /tmp/cckGrLHt.s 			page 60


 1982              		.loc 17 94 1 view .LVU539
 1983 007c 02B0     		add	sp, sp, #8
 1984              		.cfi_def_cfa_offset 24
 1985              		@ sp needed
 1986 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1987              	.L70:
 1988 0082 00BF     		.align	2
 1989              	.L69:
 1990 0084 00000000 		.word	.LANCHOR6
 1991              		.cfi_endproc
 1992              	.LFE4823:
 1994              		.section	.text.startup._GLOBAL__sub_I_mode,"ax",%progbits
 1995              		.align	1
 1996              		.p2align 2,,3
 1997              		.syntax unified
 1998              		.thumb
 1999              		.thumb_func
 2001              	_GLOBAL__sub_I_mode:
 2002              	.LFB5414:
 2003              		.loc 17 209 1 is_stmt 1 view -0
 2004              		.cfi_startproc
 2005              		@ args = 0, pretend = 0, frame = 0
 2006              		@ frame_needed = 0, uses_anonymous_args = 0
 2007              	.LBB664:
 2008              	.LBI664:
 2009              		.loc 17 209 1 view .LVU541
 2010              	.LVL103:
 2011              	.LBB665:
 2012              	.LBB666:
 2013              	.LBI666:
  35:../../libDaisy//src/daisy_pod.h ****     ~DaisyPod() {}
 2014              		.loc 5 35 5 view .LVU542
 2015              	.LBB667:
 2016              	.LBB668:
 2017              	.LBI668:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 2018              		.loc 11 21 5 view .LVU543
 2019              	.LBB669:
 2020              	.LBB670:
 2021              	.LBI670:
 2022              		.file 19 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
ARM GAS  /tmp/cckGrLHt.s 			page 61


  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
ARM GAS  /tmp/cckGrLHt.s 			page 62


  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
ARM GAS  /tmp/cckGrLHt.s 			page 63


 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 2023              		.loc 19 166 5 view .LVU544
 2024              	.LBB671:
 2025              	.LBB672:
 2026              		.loc 19 166 34 is_stmt 0 view .LVU545
 2027 0000 2548     		ldr	r0, .L73
 2028 0002 0022     		movs	r2, #0
 2029              	.LBE672:
 2030              	.LBE671:
 2031              	.LBE670:
 2032              	.LBE669:
 2033              	.LBE668:
 2034              	.LBB691:
 2035              	.LBB692:
 2036              	.LBB693:
 2037              	.LBB694:
 2038              	.LBB695:
 2039              	.LBB696:
 2040              	.LBB697:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2041              		.loc 6 37 20 view .LVU546
 2042 0004 2549     		ldr	r1, .L73+4
ARM GAS  /tmp/cckGrLHt.s 			page 64


 2043              	.LBE697:
 2044              	.LBE696:
 2045              	.LBE695:
 2046              	.LBE694:
 2047              	.LBE693:
 2048              	.LBE692:
 2049              	.LBE691:
 2050              	.LBE667:
 2051              	.LBE666:
 2052              	.LBE665:
 2053              	.LBE664:
 2054              		.loc 17 209 1 view .LVU547
 2055 0006 38B5     		push	{r3, r4, r5, lr}
 2056              		.cfi_def_cfa_offset 16
 2057              		.cfi_offset 3, -16
 2058              		.cfi_offset 4, -12
 2059              		.cfi_offset 5, -8
 2060              		.cfi_offset 14, -4
 2061              	.LBB787:
 2062              	.LBB785:
 2063              	.LBB769:
 2064              	.LBB766:
 2065              	.LBB742:
 2066              	.LBB737:
 2067              	.LBB732:
 2068              	.LBB716:
 2069              	.LBB710:
 2070              	.LBB704:
 2071              	.LBB698:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2072              		.loc 6 36 20 view .LVU548
 2073 0008 00F51043 		add	r3, r0, #36864
 2074              	.LBE698:
 2075              	.LBE704:
 2076              	.LBE710:
 2077              	.LBE716:
 2078              	.LBE732:
 2079              	.LBE737:
 2080              	.LBE742:
 2081              	.LBB743:
 2082              	.LBB689:
 2083              	.LBB675:
 2084              	.LBB674:
 2085              	.LBB673:
 2086              		.loc 19 166 34 view .LVU549
 2087 000c 0260     		str	r2, [r0]
 2088              	.LVL104:
 2089              		.loc 19 166 34 view .LVU550
 2090              	.LBE673:
 2091              	.LBE674:
 2092              	.LBE675:
 2093              	.LBB676:
 2094              	.LBI676:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2095              		.loc 15 95 5 is_stmt 1 view .LVU551
 2096              	.LBB677:
 2097              	.LBB678:
ARM GAS  /tmp/cckGrLHt.s 			page 65


  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2098              		.loc 15 95 35 is_stmt 0 view .LVU552
 2099 000e 4261     		str	r2, [r0, #20]
 2100              	.LVL105:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2101              		.loc 15 95 35 view .LVU553
 2102              	.LBE678:
 2103              	.LBE677:
 2104              	.LBE676:
 2105              	.LBB679:
 2106              	.LBI679:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2107              		.loc 14 92 5 is_stmt 1 view .LVU554
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2108              		.loc 14 92 5 is_stmt 0 view .LVU555
 2109              	.LBE679:
 2110              	.LBB680:
 2111              	.LBI680:
 2112              		.file 20 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
ARM GAS  /tmp/cckGrLHt.s 			page 66


  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 2113              		.loc 20 84 5 is_stmt 1 view .LVU556
 2114              	.LBE680:
 2115              	.LBE689:
 2116              	.LBE743:
 2117              	.LBB744:
 2118              	.LBB738:
 2119              	.LBB733:
 2120              	.LBB717:
 2121              	.LBB711:
 2122              	.LBB705:
 2123              	.LBB699:
ARM GAS  /tmp/cckGrLHt.s 			page 67


  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2124              		.loc 6 36 20 is_stmt 0 view .LVU557
 2125 0010 C3F82822 		str	r2, [r3, #552]
 2126              	.LBE699:
 2127              	.LBE705:
 2128              	.LBE711:
 2129              	.LBE717:
 2130              	.LBB718:
 2131              	.LBB719:
 2132              	.LBB720:
 2133              	.LBB721:
 2134              		.file 21 "../../libDaisy//src/per/uart.h"
   1:../../libDaisy//src/per/uart.h **** /* 
   2:../../libDaisy//src/per/uart.h **** TODO
   3:../../libDaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libDaisy//src/per/uart.h **** - Transmit function improvements.
   5:../../libDaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libDaisy//src/per/uart.h **** */
   7:../../libDaisy//src/per/uart.h **** 
   8:../../libDaisy//src/per/uart.h **** #pragma once
   9:../../libDaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libDaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libDaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libDaisy//src/per/uart.h **** 
  13:../../libDaisy//src/per/uart.h **** 
  14:../../libDaisy//src/per/uart.h **** namespace daisy
  15:../../libDaisy//src/per/uart.h **** {
  16:../../libDaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libDaisy//src/per/uart.h ****     @{
  18:../../libDaisy//src/per/uart.h ****     */
  19:../../libDaisy//src/per/uart.h **** 
  20:../../libDaisy//src/per/uart.h **** /** 
  21:../../libDaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libDaisy//src/per/uart.h ****     @author shensley
  23:../../libDaisy//src/per/uart.h ****     @date March 2020
  24:../../libDaisy//src/per/uart.h ****     */
  25:../../libDaisy//src/per/uart.h **** class UartHandler
  26:../../libDaisy//src/per/uart.h **** {
  27:../../libDaisy//src/per/uart.h ****   public:
  28:../../libDaisy//src/per/uart.h ****     struct Config
  29:../../libDaisy//src/per/uart.h ****     {
  30:../../libDaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libDaisy//src/per/uart.h ****         {
  32:../../libDaisy//src/per/uart.h ****             USART_1,
  33:../../libDaisy//src/per/uart.h ****             USART_2,
  34:../../libDaisy//src/per/uart.h ****             USART_3,
  35:../../libDaisy//src/per/uart.h ****             UART_4,
  36:../../libDaisy//src/per/uart.h ****             UART_5,
  37:../../libDaisy//src/per/uart.h ****             USART_6,
  38:../../libDaisy//src/per/uart.h ****             UART_7,
  39:../../libDaisy//src/per/uart.h ****             UART_8,
  40:../../libDaisy//src/per/uart.h ****             LPUART_1,
  41:../../libDaisy//src/per/uart.h ****         };
  42:../../libDaisy//src/per/uart.h **** 
  43:../../libDaisy//src/per/uart.h ****         enum class StopBits
  44:../../libDaisy//src/per/uart.h ****         {
  45:../../libDaisy//src/per/uart.h ****             BITS_0_5,
ARM GAS  /tmp/cckGrLHt.s 			page 68


  46:../../libDaisy//src/per/uart.h ****             BITS_1,
  47:../../libDaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libDaisy//src/per/uart.h ****             BITS_2,
  49:../../libDaisy//src/per/uart.h ****         };
  50:../../libDaisy//src/per/uart.h **** 
  51:../../libDaisy//src/per/uart.h ****         enum class Parity
  52:../../libDaisy//src/per/uart.h ****         {
  53:../../libDaisy//src/per/uart.h ****             NONE,
  54:../../libDaisy//src/per/uart.h ****             EVEN,
  55:../../libDaisy//src/per/uart.h ****             ODD,
  56:../../libDaisy//src/per/uart.h ****         };
  57:../../libDaisy//src/per/uart.h **** 
  58:../../libDaisy//src/per/uart.h ****         enum class Mode
  59:../../libDaisy//src/per/uart.h ****         {
  60:../../libDaisy//src/per/uart.h ****             RX,
  61:../../libDaisy//src/per/uart.h ****             TX,
  62:../../libDaisy//src/per/uart.h ****             TX_RX,
  63:../../libDaisy//src/per/uart.h ****         };
  64:../../libDaisy//src/per/uart.h **** 
  65:../../libDaisy//src/per/uart.h ****         enum class WordLength
  66:../../libDaisy//src/per/uart.h ****         {
  67:../../libDaisy//src/per/uart.h ****             BITS_7,
  68:../../libDaisy//src/per/uart.h ****             BITS_8,
  69:../../libDaisy//src/per/uart.h ****             BITS_9,
  70:../../libDaisy//src/per/uart.h ****         };
  71:../../libDaisy//src/per/uart.h **** 
  72:../../libDaisy//src/per/uart.h ****         struct
  73:../../libDaisy//src/per/uart.h ****         {
  74:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libDaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libDaisy//src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libDaisy//src/per/uart.h **** 
  78:../../libDaisy//src/per/uart.h ****         Config()
  79:../../libDaisy//src/per/uart.h ****         {
  80:../../libDaisy//src/per/uart.h ****             // user must init periph, pin_config, and mode
  81:../../libDaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
  82:../../libDaisy//src/per/uart.h ****             parity     = Parity::NONE;
  83:../../libDaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
  84:../../libDaisy//src/per/uart.h ****             baudrate   = 4800;
  85:../../libDaisy//src/per/uart.h ****             // baudrate   = 31250;
  86:../../libDaisy//src/per/uart.h ****         }
  87:../../libDaisy//src/per/uart.h **** 
  88:../../libDaisy//src/per/uart.h ****         Peripheral periph;
  89:../../libDaisy//src/per/uart.h ****         StopBits   stopbits;
  90:../../libDaisy//src/per/uart.h ****         Parity     parity;
  91:../../libDaisy//src/per/uart.h ****         Mode       mode;
  92:../../libDaisy//src/per/uart.h ****         WordLength wordlength;
  93:../../libDaisy//src/per/uart.h ****         uint32_t   baudrate;
  94:../../libDaisy//src/per/uart.h ****     };
  95:../../libDaisy//src/per/uart.h **** 
  96:../../libDaisy//src/per/uart.h **** 
  97:../../libDaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 2135              		.loc 21 97 35 view .LVU558
 2136 0014 C3F83022 		str	r2, [r3, #560]
 2137              	.LBE721:
 2138              	.LBE720:
 2139              	.LBE719:
ARM GAS  /tmp/cckGrLHt.s 			page 69


 2140              	.LBE718:
 2141              	.LBE733:
 2142              	.LBE738:
 2143              	.LBE744:
 2144              	.LBB745:
 2145              	.LBB690:
 2146              	.LBB683:
 2147              	.LBB681:
 2148              	.LBB682:
 2149              		.loc 20 84 33 view .LVU559
 2150 0018 0262     		str	r2, [r0, #32]
 2151              	.LVL106:
 2152              		.loc 20 84 33 view .LVU560
 2153              	.LBE682:
 2154              	.LBE681:
 2155              	.LBE683:
 2156              	.LBB684:
 2157              	.LBI684:
  40:../../libDaisy//src/hid/usb.h **** 
 2158              		.loc 13 40 5 is_stmt 1 view .LVU561
  40:../../libDaisy//src/hid/usb.h **** 
 2159              		.loc 13 40 5 is_stmt 0 view .LVU562
 2160              	.LBE684:
 2161              	.LBB685:
 2162              	.LBI685:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 2163              		.loc 12 77 5 is_stmt 1 view .LVU563
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 2164              		.loc 12 77 5 is_stmt 0 view .LVU564
 2165              	.LBE685:
 2166              	.LBB686:
 2167              	.LBI686:
 2168              		.file 22 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
ARM GAS  /tmp/cckGrLHt.s 			page 70


  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
ARM GAS  /tmp/cckGrLHt.s 			page 71


  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 2169              		.loc 22 108 5 is_stmt 1 view .LVU565
 2170              	.LBB687:
 2171              	.LBB688:
 2172              		.loc 22 108 33 is_stmt 0 view .LVU566
 2173 001a C263     		str	r2, [r0, #60]
 2174              	.LVL107:
 2175              		.loc 22 108 33 view .LVU567
 2176              	.LBE688:
 2177              	.LBE687:
 2178              	.LBE686:
 2179              	.LBE690:
 2180              	.LBE745:
 2181              	.LBB746:
 2182              	.LBI746:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 2183              		.loc 10 20 5 is_stmt 1 view .LVU568
 2184              	.LBB747:
 2185              	.LBB748:
 2186              	.LBI748:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2187              		.loc 9 41 5 view .LVU569
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2188              		.loc 9 41 5 is_stmt 0 view .LVU570
 2189              	.LBE748:
 2190              	.LBE747:
 2191              	.LBE746:
 2192              	.LBB749:
 2193              	.LBI749:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2194              		.loc 4 21 5 is_stmt 1 view .LVU571
ARM GAS  /tmp/cckGrLHt.s 			page 72


  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2195              		.loc 4 21 5 is_stmt 0 view .LVU572
 2196              	.LBE749:
 2197              	.LBB750:
 2198              	.LBI750:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2199              		.loc 4 21 5 is_stmt 1 view .LVU573
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2200              		.loc 4 21 5 is_stmt 0 view .LVU574
 2201              	.LBE750:
 2202              	.LBB751:
 2203              	.LBI751:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2204              		.loc 9 41 5 is_stmt 1 view .LVU575
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2205              		.loc 9 41 5 is_stmt 0 view .LVU576
 2206              	.LBE751:
 2207              	.LBB752:
 2208              	.LBI752:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2209              		.loc 9 41 5 is_stmt 1 view .LVU577
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2210              		.loc 9 41 5 is_stmt 0 view .LVU578
 2211              	.LBE752:
 2212              	.LBB753:
 2213              	.LBI753:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 2214              		.loc 7 17 5 is_stmt 1 view .LVU579
 2215              	.LBB754:
 2216              	.LBB755:
 2217              	.LBI755:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2218              		.loc 8 24 5 view .LVU580
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2219              		.loc 8 24 5 is_stmt 0 view .LVU581
 2220              	.LBE755:
 2221              	.LBB756:
 2222              	.LBI756:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2223              		.loc 8 24 5 is_stmt 1 view .LVU582
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2224              		.loc 8 24 5 is_stmt 0 view .LVU583
 2225              	.LBE756:
 2226              	.LBB757:
 2227              	.LBI757:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2228              		.loc 8 24 5 is_stmt 1 view .LVU584
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2229              		.loc 8 24 5 is_stmt 0 view .LVU585
 2230              	.LBE757:
 2231              	.LBE754:
 2232              	.LBE753:
 2233              	.LBB758:
 2234              	.LBI758:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 2235              		.loc 7 17 5 is_stmt 1 view .LVU586
 2236              	.LBB759:
ARM GAS  /tmp/cckGrLHt.s 			page 73


 2237              	.LBB760:
 2238              	.LBI760:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2239              		.loc 8 24 5 view .LVU587
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2240              		.loc 8 24 5 is_stmt 0 view .LVU588
 2241              	.LBE760:
 2242              	.LBB761:
 2243              	.LBI761:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2244              		.loc 8 24 5 is_stmt 1 view .LVU589
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2245              		.loc 8 24 5 is_stmt 0 view .LVU590
 2246              	.LBE761:
 2247              	.LBB762:
 2248              	.LBI762:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2249              		.loc 8 24 5 is_stmt 1 view .LVU591
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2250              		.loc 8 24 5 is_stmt 0 view .LVU592
 2251              	.LBE762:
 2252              	.LBE759:
 2253              	.LBE758:
 2254              	.LBB763:
 2255              	.LBI691:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2256              		.loc 6 84 5 is_stmt 1 view .LVU593
 2257              	.LBB739:
 2258              	.LBB734:
 2259              	.LBB723:
 2260              	.LBI723:
 2261              		.loc 21 97 5 view .LVU594
 2262              	.LBB724:
 2263              	.LBB725:
 2264              		.loc 21 97 35 is_stmt 0 view .LVU595
 2265 001c C0F88021 		str	r2, [r0, #384]
 2266              	.LVL108:
 2267              		.loc 21 97 35 view .LVU596
 2268              	.LBE725:
 2269              	.LBE724:
 2270              	.LBE723:
 2271              	.LBB726:
 2272              	.LBI726:
 2273              		.file 23 "../../libDaisy//src/util/ringbuffer.h"
   1:../../libDaisy//src/util/ringbuffer.h **** #pragma once
   2:../../libDaisy//src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libDaisy//src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libDaisy//src/util/ringbuffer.h **** 
   5:../../libDaisy//src/util/ringbuffer.h **** #include <algorithm>
   6:../../libDaisy//src/util/ringbuffer.h **** 
   7:../../libDaisy//src/util/ringbuffer.h **** namespace daisy
   8:../../libDaisy//src/util/ringbuffer.h **** {
   9:../../libDaisy//src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libDaisy//src/util/ringbuffer.h ****     @{
  11:../../libDaisy//src/util/ringbuffer.h **** */
  12:../../libDaisy//src/util/ringbuffer.h **** 
  13:../../libDaisy//src/util/ringbuffer.h **** /**
ARM GAS  /tmp/cckGrLHt.s 			page 74


  14:../../libDaisy//src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libDaisy//src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libDaisy//src/util/ringbuffer.h **** */
  17:../../libDaisy//src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libDaisy//src/util/ringbuffer.h **** class RingBuffer
  19:../../libDaisy//src/util/ringbuffer.h **** {
  20:../../libDaisy//src/util/ringbuffer.h ****   public:
  21:../../libDaisy//src/util/ringbuffer.h ****     RingBuffer() {}
 2274              		.loc 23 21 5 is_stmt 1 view .LVU597
 2275              		.loc 23 21 5 is_stmt 0 view .LVU598
 2276              	.LBE726:
 2277              	.LBB727:
 2278              	.LBI694:
  86:../../libDaisy//src/hid/midi.h **** 
  87:../../libDaisy//src/hid/midi.h ****     struct Config
 2279              		.loc 6 87 12 is_stmt 1 view .LVU599
 2280              	.LBB712:
 2281              	.LBI695:
  34:../../libDaisy//src/hid/midi.h ****         {
 2282              		.loc 6 34 9 view .LVU600
 2283              	.LBB706:
 2284              	.LBB700:
  36:../../libDaisy//src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 2285              		.loc 6 36 13 view .LVU601
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2286              		.loc 6 37 13 view .LVU602
 2287              	.LBE700:
 2288              	.LBE706:
 2289              	.LBE712:
 2290              	.LBE727:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2291              		.loc 6 84 19 is_stmt 0 view .LVU603
 2292 0020 1F4A     		ldr	r2, .L73+8
 2293              	.LBE734:
 2294              	.LBE739:
 2295              	.LBE763:
 2296              	.LBE766:
 2297              	.LBE769:
  37:my_multieffect.cpp **** 
 2298              		.loc 17 37 17 view .LVU604
 2299 0022 204C     		ldr	r4, .L73+12
 2300              	.LBB770:
 2301              	.LBB767:
 2302              	.LBB764:
 2303              	.LBB740:
 2304              	.LBB735:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2305              		.loc 6 84 19 view .LVU605
 2306 0024 C3F83422 		str	r2, [r3, #564]
 2307 0028 4FF60F02 		movw	r2, #63503
 2308              	.LBB728:
 2309              	.LBB713:
 2310              	.LBB707:
 2311              	.LBB701:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2312              		.loc 6 37 20 view .LVU606
 2313 002c 0D88     		ldrh	r5, [r1]
ARM GAS  /tmp/cckGrLHt.s 			page 75


 2314              	.LBE701:
 2315              	.LBE707:
 2316              	.LBE713:
 2317              	.LBE728:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2318              		.loc 6 84 19 view .LVU607
 2319 002e A3F83822 		strh	r2, [r3, #568]	@ movhi
 2320 0032 0722     		movs	r2, #7
 2321              	.LBB729:
 2322              	.LBB714:
 2323              	.LBB708:
 2324              	.LBB702:
  38:../../libDaisy//src/hid/midi.h ****         }
 2325              		.loc 6 38 20 view .LVU608
 2326 0034 8988     		ldrh	r1, [r1, #4]
 2327              	.LBE702:
 2328              	.LBE708:
 2329              	.LBE714:
 2330              	.LBE729:
  84:../../libDaisy//src/hid/midi.h ****     ~MidiHandler() {}
 2331              		.loc 6 84 19 view .LVU609
 2332 0036 83F83A22 		strb	r2, [r3, #570]
 2333              	.LBE735:
 2334              	.LBE740:
 2335              	.LBE764:
 2336              	.LBE767:
 2337              	.LBE770:
  37:my_multieffect.cpp **** 
 2338              		.loc 17 37 17 view .LVU610
 2339 003a 2246     		mov	r2, r4
 2340              	.LBB771:
 2341              	.LBB768:
 2342              	.LBB765:
 2343              	.LBB741:
 2344              	.LBB736:
 2345              	.LBB730:
 2346              	.LBB715:
 2347              	.LBB709:
 2348              	.LBB703:
  37:../../libDaisy//src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 2349              		.loc 6 37 20 view .LVU611
 2350 003c A3F82C52 		strh	r5, [r3, #556]	@ movhi
  38:../../libDaisy//src/hid/midi.h ****         }
 2351              		.loc 6 38 13 is_stmt 1 view .LVU612
  38:../../libDaisy//src/hid/midi.h ****         }
 2352              		.loc 6 38 20 is_stmt 0 view .LVU613
 2353 0040 A3F82E12 		strh	r1, [r3, #558]	@ movhi
 2354              	.LVL109:
  38:../../libDaisy//src/hid/midi.h ****         }
 2355              		.loc 6 38 20 view .LVU614
 2356              	.LBE703:
 2357              	.LBE709:
 2358              	.LBE715:
 2359              	.LBE730:
 2360              	.LBB731:
 2361              	.LBI718:
  25:../../libDaisy//src/hid/midi.h ****     ~MidiUartTransport() {}
ARM GAS  /tmp/cckGrLHt.s 			page 76


 2362              		.loc 6 25 5 is_stmt 1 view .LVU615
 2363              	.LBB722:
 2364              	.LBI719:
 2365              		.loc 21 97 5 view .LVU616
 2366              		.loc 21 97 5 is_stmt 0 view .LVU617
 2367              	.LBE722:
 2368              	.LBE731:
 2369              	.LBE736:
 2370              	.LBE741:
 2371              	.LBE765:
 2372              	.LBE768:
 2373              	.LBE771:
  40:my_multieffect.cpp **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delr;
 2374              		.loc 17 40 50 view .LVU618
 2375 0044 184D     		ldr	r5, .L73+16
  37:my_multieffect.cpp **** 
 2376              		.loc 17 37 17 view .LVU619
 2377 0046 1949     		ldr	r1, .L73+20
 2378 0048 FFF7FEFF 		bl	__aeabi_atexit
 2379              	.LVL110:
 2380              	.LBB772:
 2381              	.LBI772:
  40:../../DaisySP//Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 2382              		.loc 1 40 5 is_stmt 1 view .LVU620
  40:../../DaisySP//Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 2383              		.loc 1 40 5 is_stmt 0 view .LVU621
 2384              	.LBE772:
  39:my_multieffect.cpp **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS dell;
 2385              		.loc 17 39 50 view .LVU622
 2386 004c 2246     		mov	r2, r4
 2387 004e 1849     		ldr	r1, .L73+24
 2388 0050 1848     		ldr	r0, .L73+28
 2389 0052 FFF7FEFF 		bl	__aeabi_atexit
 2390              	.LVL111:
 2391              	.LBB773:
 2392              	.LBI773:
  23:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 2393              		.loc 16 23 5 is_stmt 1 view .LVU623
  23:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 2394              		.loc 16 23 5 is_stmt 0 view .LVU624
 2395              	.LBE773:
  40:my_multieffect.cpp **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS delr;
 2396              		.loc 17 40 50 view .LVU625
 2397 0056 2246     		mov	r2, r4
 2398 0058 2946     		mov	r1, r5
 2399 005a 1748     		ldr	r0, .L73+32
 2400 005c FFF7FEFF 		bl	__aeabi_atexit
 2401              	.LVL112:
 2402              	.LBB774:
 2403              	.LBI774:
  23:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 2404              		.loc 16 23 5 is_stmt 1 view .LVU626
  23:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 2405              		.loc 16 23 5 is_stmt 0 view .LVU627
 2406              	.LBE774:
  41:my_multieffect.cpp **** static Tone                                      tone;
 2407              		.loc 17 41 50 view .LVU628
ARM GAS  /tmp/cckGrLHt.s 			page 77


 2408 0060 2246     		mov	r2, r4
 2409 0062 2946     		mov	r1, r5
 2410 0064 1548     		ldr	r0, .L73+36
  43:my_multieffect.cpp **** 
 2411              		.loc 17 43 18 view .LVU629
 2412 0066 164D     		ldr	r5, .L73+40
  41:my_multieffect.cpp **** static Tone                                      tone;
 2413              		.loc 17 41 50 view .LVU630
 2414 0068 FFF7FEFF 		bl	__aeabi_atexit
 2415              	.LVL113:
 2416              	.LBB775:
 2417              	.LBI775:
  15:../../DaisySP//Source/Filters/tone.h ****     ~Tone() {}
 2418              		.loc 2 15 5 is_stmt 1 view .LVU631
  15:../../DaisySP//Source/Filters/tone.h ****     ~Tone() {}
 2419              		.loc 2 15 5 is_stmt 0 view .LVU632
 2420              	.LBE775:
  42:my_multieffect.cpp **** static Parameter deltime, cutoffParam, crushrate;
 2421              		.loc 17 42 50 view .LVU633
 2422 006c 2246     		mov	r2, r4
 2423 006e 1549     		ldr	r1, .L73+44
 2424 0070 1548     		ldr	r0, .L73+48
 2425 0072 FFF7FEFF 		bl	__aeabi_atexit
 2426              	.LVL114:
 2427              	.LBB776:
 2428              	.LBI776:
  25:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
 2429              		.loc 3 25 5 is_stmt 1 view .LVU634
 2430              	.LBB777:
 2431              	.LBB778:
 2432              	.LBI778:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2433              		.loc 4 21 5 view .LVU635
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2434              		.loc 4 21 5 is_stmt 0 view .LVU636
 2435              	.LBE778:
 2436              	.LBE777:
 2437              	.LBE776:
  43:my_multieffect.cpp **** 
 2438              		.loc 17 43 18 view .LVU637
 2439 0076 2246     		mov	r2, r4
 2440 0078 2946     		mov	r1, r5
 2441 007a 1448     		ldr	r0, .L73+52
 2442 007c FFF7FEFF 		bl	__aeabi_atexit
 2443              	.LVL115:
 2444              	.LBB779:
 2445              	.LBI779:
  25:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
 2446              		.loc 3 25 5 is_stmt 1 view .LVU638
 2447              	.LBB780:
 2448              	.LBB781:
 2449              	.LBI781:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2450              		.loc 4 21 5 view .LVU639
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2451              		.loc 4 21 5 is_stmt 0 view .LVU640
 2452              	.LBE781:
ARM GAS  /tmp/cckGrLHt.s 			page 78


 2453              	.LBE780:
 2454              	.LBE779:
  43:my_multieffect.cpp **** 
 2455              		.loc 17 43 27 view .LVU641
 2456 0080 2246     		mov	r2, r4
 2457 0082 2946     		mov	r1, r5
 2458 0084 1248     		ldr	r0, .L73+56
 2459 0086 FFF7FEFF 		bl	__aeabi_atexit
 2460              	.LVL116:
 2461              	.LBB782:
 2462              	.LBI782:
  25:../../libDaisy//src/hid/parameter.h ****     /** Destructor */
 2463              		.loc 3 25 5 is_stmt 1 view .LVU642
 2464              	.LBB783:
 2465              	.LBB784:
 2466              	.LBI784:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2467              		.loc 4 21 5 view .LVU643
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 2468              		.loc 4 21 5 is_stmt 0 view .LVU644
 2469              	.LBE784:
 2470              	.LBE783:
 2471              	.LBE782:
  43:my_multieffect.cpp **** 
 2472              		.loc 17 43 40 view .LVU645
 2473 008a 2246     		mov	r2, r4
 2474 008c 2946     		mov	r1, r5
 2475 008e 1148     		ldr	r0, .L73+60
 2476              	.LBE785:
 2477              	.LBE787:
 2478              		.loc 17 209 1 view .LVU646
 2479 0090 BDE83840 		pop	{r3, r4, r5, lr}
 2480              		.cfi_restore 14
 2481              		.cfi_restore 5
 2482              		.cfi_restore 4
 2483              		.cfi_restore 3
 2484              		.cfi_def_cfa_offset 0
 2485              	.LBB788:
 2486              	.LBB786:
  43:my_multieffect.cpp **** 
 2487              		.loc 17 43 40 view .LVU647
 2488 0094 FFF7FEBF 		b	__aeabi_atexit
 2489              	.LVL117:
 2490              	.L74:
 2491              		.align	2
 2492              	.L73:
 2493 0098 00000000 		.word	_ZL3pod
 2494 009c 00000000 		.word	.LANCHOR14
 2495 00a0 80707FF0 		.word	-260083584
 2496 00a4 00000000 		.word	__dso_handle
 2497 00a8 00000000 		.word	_ZN7daisysp9DelayLineIfLj120000EED1Ev
 2498 00ac 00000000 		.word	_ZN5daisy8DaisyPodD1Ev
 2499 00b0 00000000 		.word	_ZN7daisysp8ReverbScD1Ev
 2500 00b4 00000000 		.word	_ZL3rev
 2501 00b8 0C530700 		.word	_ZL4dell
 2502 00bc 00000000 		.word	_ZL4delr
 2503 00c0 00000000 		.word	_ZN5daisy9ParameterD1Ev
ARM GAS  /tmp/cckGrLHt.s 			page 79


 2504 00c4 00000000 		.word	_ZN7daisysp4ToneD1Ev
 2505 00c8 00000000 		.word	.LANCHOR0
 2506 00cc 00000000 		.word	.LANCHOR1
 2507 00d0 00000000 		.word	.LANCHOR2
 2508 00d4 00000000 		.word	.LANCHOR3
 2509              	.LBE786:
 2510              	.LBE788:
 2511              		.cfi_endproc
 2512              	.LFE5414:
 2514              		.section	.init_array,"aw",%init_array
 2515              		.align	2
 2516 0000 00000000 		.word	_GLOBAL__sub_I_mode(target1)
 2517              		.global	drywet
 2518              		.global	crushsr
 2519              		.global	crushsl
 2520              		.global	crushcount
 2521              		.global	crushmod
 2522              		.global	cutoff
 2523              		.global	delayTarget
 2524              		.global	feedback
 2525              		.global	currentDelay
 2526              		.global	mode
 2527              		.section	.rodata
 2528              		.align	2
 2529              		.set	.LANCHOR14,. + 0
 2530              	.LC0:
 2531 0000 01       		.byte	1
 2532 0001 07       		.byte	7
 2533 0002 0000     		.space	2
 2534              	.LC1:
 2535 0004 01       		.byte	1
 2536 0005 06       		.byte	6
 2537              		.section	.bss._ZL11cutoffParam,"aw",%nobits
 2538              		.align	2
 2539              		.set	.LANCHOR2,. + 0
 2542              	_ZL11cutoffParam:
 2543 0000 00000000 		.space	56
 2543      00000000 
 2543      00000000 
 2543      00000000 
 2543      00000000 
 2544              		.section	.bss._ZL3pod,"aw",%nobits
 2545              		.align	2
 2548              	_ZL3pod:
 2549 0000 00000000 		.space	37436
 2549      00000000 
 2549      00000000 
 2549      00000000 
 2549      00000000 
 2550              		.section	.bss._ZL3rev,"aw",%nobits
 2551              		.align	2
 2554              	_ZL3rev:
 2555 0000 00000000 		.space	396100
 2555      00000000 
 2555      00000000 
 2555      00000000 
 2555      00000000 
ARM GAS  /tmp/cckGrLHt.s 			page 80


 2556              		.section	.bss._ZL4tone,"aw",%nobits
 2557              		.align	2
 2558              		.set	.LANCHOR0,. + 0
 2561              	_ZL4tone:
 2562 0000 00000000 		.space	28
 2562      00000000 
 2562      00000000 
 2562      00000000 
 2562      00000000 
 2563              		.section	.bss._ZL7deltime,"aw",%nobits
 2564              		.align	2
 2565              		.set	.LANCHOR1,. + 0
 2568              	_ZL7deltime:
 2569 0000 00000000 		.space	56
 2569      00000000 
 2569      00000000 
 2569      00000000 
 2569      00000000 
 2570              		.section	.bss._ZL9crushrate,"aw",%nobits
 2571              		.align	2
 2572              		.set	.LANCHOR3,. + 0
 2575              	_ZL9crushrate:
 2576 0000 00000000 		.space	56
 2576      00000000 
 2576      00000000 
 2576      00000000 
 2576      00000000 
 2577              		.section	.bss.crushcount,"aw",%nobits
 2578              		.align	2
 2579              		.set	.LANCHOR11,. + 0
 2582              	crushcount:
 2583 0000 00000000 		.space	4
 2584              		.section	.bss.crushmod,"aw",%nobits
 2585              		.align	2
 2586              		.set	.LANCHOR10,. + 0
 2589              	crushmod:
 2590 0000 00000000 		.space	4
 2591              		.section	.bss.crushsl,"aw",%nobits
 2592              		.align	2
 2593              		.set	.LANCHOR12,. + 0
 2596              	crushsl:
 2597 0000 00000000 		.space	4
 2598              		.section	.bss.crushsr,"aw",%nobits
 2599              		.align	2
 2600              		.set	.LANCHOR13,. + 0
 2603              	crushsr:
 2604 0000 00000000 		.space	4
 2605              		.section	.bss.currentDelay,"aw",%nobits
 2606              		.align	2
 2607              		.set	.LANCHOR5,. + 0
 2610              	currentDelay:
 2611 0000 00000000 		.space	4
 2612              		.section	.bss.cutoff,"aw",%nobits
 2613              		.align	2
 2614              		.set	.LANCHOR9,. + 0
 2617              	cutoff:
 2618 0000 00000000 		.space	4
ARM GAS  /tmp/cckGrLHt.s 			page 81


 2619              		.section	.bss.delayTarget,"aw",%nobits
 2620              		.align	2
 2621              		.set	.LANCHOR4,. + 0
 2624              	delayTarget:
 2625 0000 00000000 		.space	4
 2626              		.section	.bss.drywet,"aw",%nobits
 2627              		.align	2
 2628              		.set	.LANCHOR7,. + 0
 2631              	drywet:
 2632 0000 00000000 		.space	4
 2633              		.section	.bss.feedback,"aw",%nobits
 2634              		.align	2
 2635              		.set	.LANCHOR8,. + 0
 2638              	feedback:
 2639 0000 00000000 		.space	4
 2640              		.section	.bss.mode,"aw",%nobits
 2641              		.align	2
 2642              		.set	.LANCHOR6,. + 0
 2645              	mode:
 2646 0000 00000000 		.space	4
 2647              		.section	.sdram_bss,"aw"
 2648              		.align	2
 2651              	_ZL4delr:
 2652 0000 00000000 		.space	480012
 2652      00000000 
 2652      00000000 
 2652      00000000 
 2652      00000000 
 2655              	_ZL4dell:
 2656 7530c 00000000 		.space	480012
 2656      00000000 
 2656      00000000 
 2656      00000000 
 2656      00000000 
 2657              		.text
 2658              	.Letext0:
 2659              		.file 24 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2660              		.file 25 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2661              		.file 26 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2662              		.file 27 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm
 2663              		.file 28 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2664              		.file 29 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2665              		.file 30 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2666              		.file 31 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2667              		.file 32 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2668              		.file 33 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2669              		.file 34 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2670              		.file 35 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2671              		.file 36 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2672              		.file 37 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2673              		.file 38 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2674              		.file 39 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2675              		.file 40 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2676              		.file 41 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2677              		.file 42 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2678              		.file 43 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2679              		.file 44 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
ARM GAS  /tmp/cckGrLHt.s 			page 82


 2680              		.file 45 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2681              		.file 46 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2682              		.file 47 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2683              		.file 48 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2684              		.file 49 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2685              		.file 50 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2686              		.file 51 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2687              		.file 52 "../../DaisySP//Source/Control/adenv.h"
 2688              		.file 53 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm
 2689              		.file 54 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2690              		.file 55 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2691              		.file 56 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2692              		.file 57 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2693              		.file 58 "/home/liparus/Documents/projects/electrosmith/gcc-arm-none-eabi-10.3-2021.10/arm-none-ea
 2694              		.file 59 "../../libDaisy//src/daisy_core.h"
 2695              		.file 60 "../../libDaisy//src/per/tim.h"
 2696              		.file 61 "../../libDaisy//src/hid/MidiEvent.h"
 2697              		.file 62 "../../libDaisy//src/util/wav_format.h"
 2698              		.file 63 "../../libDaisy//src/util/color.h"
 2699              		.file 64 "../../libDaisy//src/dev/max11300.h"
 2700              		.file 65 "../../libDaisy//src/per/gpio.h"
 2701              		.file 66 "../../libDaisy//src/dev/sdram.h"
 2702              		.file 67 "../../libDaisy//src/dev/sr_595.h"
 2703              		.file 68 "<built-in>"
ARM GAS  /tmp/cckGrLHt.s 			page 83


DEFINED SYMBOLS
                            *ABS*:0000000000000000 my_multieffect.cpp
     /tmp/cckGrLHt.s:19     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 $t
     /tmp/cckGrLHt.s:26     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD2Ev
     /tmp/cckGrLHt.s:26     .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD1Ev
     /tmp/cckGrLHt.s:43     .text._ZN7daisysp4ToneD2Ev:0000000000000000 $t
     /tmp/cckGrLHt.s:50     .text._ZN7daisysp4ToneD2Ev:0000000000000000 _ZN7daisysp4ToneD2Ev
     /tmp/cckGrLHt.s:50     .text._ZN7daisysp4ToneD2Ev:0000000000000000 _ZN7daisysp4ToneD1Ev
     /tmp/cckGrLHt.s:67     .text._ZN5daisy9ParameterD2Ev:0000000000000000 $t
     /tmp/cckGrLHt.s:74     .text._ZN5daisy9ParameterD2Ev:0000000000000000 _ZN5daisy9ParameterD2Ev
     /tmp/cckGrLHt.s:74     .text._ZN5daisy9ParameterD2Ev:0000000000000000 _ZN5daisy9ParameterD1Ev
     /tmp/cckGrLHt.s:97     .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 $t
     /tmp/cckGrLHt.s:104    .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD2Ev
     /tmp/cckGrLHt.s:104    .text._ZN5daisy8DaisyPodD2Ev:0000000000000000 _ZN5daisy8DaisyPodD1Ev
     /tmp/cckGrLHt.s:231    .text._ZN7daisysp9DelayLineIfLj120000EED2Ev:0000000000000000 $t
     /tmp/cckGrLHt.s:238    .text._ZN7daisysp9DelayLineIfLj120000EED2Ev:0000000000000000 _ZN7daisysp9DelayLineIfLj120000EED2Ev
     /tmp/cckGrLHt.s:238    .text._ZN7daisysp9DelayLineIfLj120000EED2Ev:0000000000000000 _ZN7daisysp9DelayLineIfLj120000EED1Ev
     /tmp/cckGrLHt.s:255    .text.startup.main:0000000000000000 $t
     /tmp/cckGrLHt.s:262    .text.startup.main:0000000000000000 main
     /tmp/cckGrLHt.s:626    .text.startup.main:0000000000000138 $d
     /tmp/cckGrLHt.s:2548   .bss._ZL3pod:0000000000000000 _ZL3pod
     /tmp/cckGrLHt.s:2554   .bss._ZL3rev:0000000000000000 _ZL3rev
     /tmp/cckGrLHt.s:2655   .sdram_bss:000000000007530c _ZL4dell
     /tmp/cckGrLHt.s:1836   .text._Z13AudioCallbackPKfPfj:0000000000000000 _Z13AudioCallbackPKfPfj
     /tmp/cckGrLHt.s:2651   .sdram_bss:0000000000000000 _ZL4delr
     /tmp/cckGrLHt.s:652    .text._Z11UpdateKnobsRfS_:0000000000000000 $t
     /tmp/cckGrLHt.s:659    .text._Z11UpdateKnobsRfS_:0000000000000000 _Z11UpdateKnobsRfS_
     /tmp/cckGrLHt.s:810    .text._Z11UpdateKnobsRfS_:0000000000000074 $d
     /tmp/cckGrLHt.s:827    .text._Z13UpdateEncoderv:0000000000000000 $t
     /tmp/cckGrLHt.s:834    .text._Z13UpdateEncoderv:0000000000000000 _Z13UpdateEncoderv
     /tmp/cckGrLHt.s:903    .text._Z13UpdateEncoderv:000000000000003c $d
     /tmp/cckGrLHt.s:911    .text._Z10UpdateLedsff:0000000000000000 $t
     /tmp/cckGrLHt.s:918    .text._Z10UpdateLedsff:0000000000000000 _Z10UpdateLedsff
     /tmp/cckGrLHt.s:1033   .text._Z10UpdateLedsff:0000000000000098 $d
     /tmp/cckGrLHt.s:1042   .text._Z8Controlsv:0000000000000000 $t
     /tmp/cckGrLHt.s:1049   .text._Z8Controlsv:0000000000000000 _Z8Controlsv
     /tmp/cckGrLHt.s:1164   .text._Z8Controlsv:000000000000006c $d
     /tmp/cckGrLHt.s:1175   .text._Z15GetReverbSampleRfS_ff:0000000000000000 $t
     /tmp/cckGrLHt.s:1182   .text._Z15GetReverbSampleRfS_ff:0000000000000000 _Z15GetReverbSampleRfS_ff
     /tmp/cckGrLHt.s:1261   .text._Z15GetReverbSampleRfS_ff:0000000000000060 $d
     /tmp/cckGrLHt.s:1267   .text._Z14GetDelaySampleRfS_ff:0000000000000000 $t
     /tmp/cckGrLHt.s:1274   .text._Z14GetDelaySampleRfS_ff:0000000000000000 _Z14GetDelaySampleRfS_ff
     /tmp/cckGrLHt.s:1720   .text._Z14GetDelaySampleRfS_ff:0000000000000150 $d
     /tmp/cckGrLHt.s:1733   .text._Z14GetCrushSampleRfS_ff:0000000000000000 $t
     /tmp/cckGrLHt.s:1740   .text._Z14GetCrushSampleRfS_ff:0000000000000000 _Z14GetCrushSampleRfS_ff
     /tmp/cckGrLHt.s:1820   .text._Z14GetCrushSampleRfS_ff:000000000000004c $d
     /tmp/cckGrLHt.s:1829   .text._Z13AudioCallbackPKfPfj:0000000000000000 $t
     /tmp/cckGrLHt.s:1990   .text._Z13AudioCallbackPKfPfj:0000000000000084 $d
     /tmp/cckGrLHt.s:1995   .text.startup._GLOBAL__sub_I_mode:0000000000000000 $t
     /tmp/cckGrLHt.s:2001   .text.startup._GLOBAL__sub_I_mode:0000000000000000 _GLOBAL__sub_I_mode
     /tmp/cckGrLHt.s:2493   .text.startup._GLOBAL__sub_I_mode:0000000000000098 $d
     /tmp/cckGrLHt.s:2515   .init_array:0000000000000000 $d
     /tmp/cckGrLHt.s:2631   .bss.drywet:0000000000000000 drywet
     /tmp/cckGrLHt.s:2603   .bss.crushsr:0000000000000000 crushsr
     /tmp/cckGrLHt.s:2596   .bss.crushsl:0000000000000000 crushsl
     /tmp/cckGrLHt.s:2582   .bss.crushcount:0000000000000000 crushcount
     /tmp/cckGrLHt.s:2589   .bss.crushmod:0000000000000000 crushmod
ARM GAS  /tmp/cckGrLHt.s 			page 84


     /tmp/cckGrLHt.s:2617   .bss.cutoff:0000000000000000 cutoff
     /tmp/cckGrLHt.s:2624   .bss.delayTarget:0000000000000000 delayTarget
     /tmp/cckGrLHt.s:2638   .bss.feedback:0000000000000000 feedback
     /tmp/cckGrLHt.s:2610   .bss.currentDelay:0000000000000000 currentDelay
     /tmp/cckGrLHt.s:2645   .bss.mode:0000000000000000 mode
     /tmp/cckGrLHt.s:2528   .rodata:0000000000000000 $d
     /tmp/cckGrLHt.s:2538   .bss._ZL11cutoffParam:0000000000000000 $d
     /tmp/cckGrLHt.s:2542   .bss._ZL11cutoffParam:0000000000000000 _ZL11cutoffParam
     /tmp/cckGrLHt.s:2545   .bss._ZL3pod:0000000000000000 $d
     /tmp/cckGrLHt.s:2551   .bss._ZL3rev:0000000000000000 $d
     /tmp/cckGrLHt.s:2557   .bss._ZL4tone:0000000000000000 $d
     /tmp/cckGrLHt.s:2561   .bss._ZL4tone:0000000000000000 _ZL4tone
     /tmp/cckGrLHt.s:2564   .bss._ZL7deltime:0000000000000000 $d
     /tmp/cckGrLHt.s:2568   .bss._ZL7deltime:0000000000000000 _ZL7deltime
     /tmp/cckGrLHt.s:2571   .bss._ZL9crushrate:0000000000000000 $d
     /tmp/cckGrLHt.s:2575   .bss._ZL9crushrate:0000000000000000 _ZL9crushrate
     /tmp/cckGrLHt.s:2578   .bss.crushcount:0000000000000000 $d
     /tmp/cckGrLHt.s:2585   .bss.crushmod:0000000000000000 $d
     /tmp/cckGrLHt.s:2592   .bss.crushsl:0000000000000000 $d
     /tmp/cckGrLHt.s:2599   .bss.crushsr:0000000000000000 $d
     /tmp/cckGrLHt.s:2606   .bss.currentDelay:0000000000000000 $d
     /tmp/cckGrLHt.s:2613   .bss.cutoff:0000000000000000 $d
     /tmp/cckGrLHt.s:2620   .bss.delayTarget:0000000000000000 $d
     /tmp/cckGrLHt.s:2627   .bss.drywet:0000000000000000 $d
     /tmp/cckGrLHt.s:2634   .bss.feedback:0000000000000000 $d
     /tmp/cckGrLHt.s:2641   .bss.mode:0000000000000000 $d
     /tmp/cckGrLHt.s:2648   .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN7daisysp8ReverbScD5Ev
                           .group:0000000000000000 _ZN7daisysp4ToneD5Ev
                           .group:0000000000000000 _ZN5daisy9ParameterD5Ev
                           .group:0000000000000000 _ZN5daisy8DaisyPodD5Ev
                           .group:0000000000000000 _ZN7daisysp9DelayLineIfLj120000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy8DaisyPod4InitEb
_ZN5daisy8DaisyPod17SetAudioBlockSizeEj
_ZN5daisy8DaisyPod15AudioSampleRateEv
_ZN7daisysp8ReverbSc4InitEf
memset
_ZN7daisysp4Tone4InitEf
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZN5daisy8DaisyPod8StartAdcEv
_ZN5daisy8DaisyPod10StartAudioEPFvPKfPfjE
_ZN5daisy13AnalogControl7ProcessEv
_ZN5daisy9Parameter7ProcessEv
_ZN7daisysp4Tone21CalculateCoefficientsEv
_ZN5daisy6RgbLed3SetEfff
_ZN5daisy8DaisyPod10UpdateLedsEv
_ZN5daisy8DaisyPod21ProcessAnalogControlsEv
_ZN5daisy8DaisyPod22ProcessDigitalControlsEv
_ZN7daisysp8ReverbSc7ProcessERKfS2_PfS3_
_ZN7daisysp4Tone7ProcessEf
__aeabi_atexit
__dso_handle
